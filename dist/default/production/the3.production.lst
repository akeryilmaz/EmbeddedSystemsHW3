

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun May 31 23:01:12 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F8722 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  00086E                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for _special
    76  00086E  04                 	db	4
    77                           
    78                           	psect	nvCOMRAM
    79  000021                     __pnvCOMRAM:
    80                           	callstack 0
    81  000021                     _end_game_counter:
    82                           	callstack 0
    83  000021                     	ds	2
    84  000023                     _timer1_counter:
    85                           	callstack 0
    86  000023                     	ds	2
    87  000025                     _timer0_counter:
    88                           	callstack 0
    89  000025                     	ds	2
    90  0000                     _TMR0	set	4054
    91  0000                     _TMR1	set	4046
    92  0000                     _ADRESL	set	4035
    93  0000                     _ADRESH	set	4036
    94  0000                     _LATJ	set	3985
    95  0000                     _TRISB	set	3987
    96  0000                     _TRISE	set	3990
    97  0000                     _TRISD	set	3989
    98  0000                     _TRISC	set	3988
    99  0000                     _TRISJ	set	3994
   100  0000                     _ADCON2	set	4032
   101  0000                     _ADCON1	set	4033
   102  0000                     _ADCON0	set	4034
   103  0000                     _TRISH	set	3993
   104  0000                     _T1CON	set	4045
   105  0000                     _T0CON	set	4053
   106  0000                     _INTCON	set	4082
   107  0000                     _PORTB	set	3969
   108  0000                     _PORTBbits	set	3969
   109  0000                     _TMR0L	set	4054
   110  0000                     _GODONE	set	32273
   111  0000                     _ADIE	set	31982
   112  0000                     _LATE2	set	31850
   113  0000                     _LATC2	set	31834
   114  0000                     _LATE1	set	31849
   115  0000                     _LATC1	set	31833
   116  0000                     _LATD3	set	31843
   117  0000                     _LATD2	set	31842
   118  0000                     _LATD1	set	31841
   119  0000                     _LATD0	set	31840
   120  0000                     _LATH3	set	31875
   121  0000                     _PEIE	set	32662
   122  0000                     _GIE	set	32663
   123  0000                     _RBIE	set	32659
   124  0000                     _ADON	set	32272
   125  0000                     _TMR1IE	set	31976
   126  0000                     _TMR0IE	set	32661
   127  0000                     _RBIF	set	32656
   128  0000                     _TMR1IF	set	31984
   129  0000                     _TMR0IF	set	32658
   130  0000                     _ADIF	set	31990
   131                           
   132                           ; #config settings
   133                           
   134                           	psect	cinit
   135  000830                     __pcinit:
   136                           	callstack 0
   137  000830                     start_initialization:
   138                           	callstack 0
   139  000830                     __initialization:
   140                           	callstack 0
   141                           
   142                           ; Initialize objects allocated to COMRAM (1 bytes)
   143                           ; load TBLPTR registers with __pidataCOMRAM
   144  000830  0E6E               	movlw	low __pidataCOMRAM
   145  000832  6EF6               	movwf	tblptrl,c
   146  000834  0E08               	movlw	high __pidataCOMRAM
   147  000836  6EF7               	movwf	tblptrh,c
   148  000838  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   149  00083A  6EF8               	movwf	tblptru,c
   150  00083C  0009               	tblrd		*+	;fetch initializer
   151  00083E  CFF5 F027          	movff	tablat,__pdataCOMRAM
   152                           
   153                           ; Clear objects allocated to COMRAM (18 bytes)
   154  000842  EE00  F001         	lfsr	0,__pbssCOMRAM
   155  000846  0E12               	movlw	18
   156  000848                     clear_0:
   157  000848  6AEE               	clrf	postinc0,c
   158  00084A  06E8               	decf	wreg,f,c
   159  00084C  E1FD               	bnz	clear_0
   160  00084E                     end_of_initialization:
   161                           	callstack 0
   162  00084E                     __end_of__initialization:
   163                           	callstack 0
   164  00084E  9028               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   165  000850  9228               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   166  000852  0100               	movlb	0
   167  000854  EFB3  F001         	goto	_main	;jump to C main() function
   168                           
   169                           	psect	bssCOMRAM
   170  000001                     __pbssCOMRAM:
   171                           	callstack 0
   172  000001                     _previous_state:
   173                           	callstack 0
   174  000001                     	ds	2
   175  000003                     _state:
   176                           	callstack 0
   177  000003                     	ds	2
   178  000005                     _current_guess:
   179                           	callstack 0
   180  000005                     	ds	2
   181  000007                     _convertedDecimal:
   182                           	callstack 0
   183  000007                     	ds	2
   184  000009                     _rb_flag:
   185                           	callstack 0
   186  000009                     	ds	2
   187  00000B                     _adcon_flag:
   188                           	callstack 0
   189  00000B                     	ds	2
   190  00000D                     _half_sec_flag:
   191                           	callstack 0
   192  00000D                     	ds	2
   193  00000F                     _timer0_flag:
   194                           	callstack 0
   195  00000F                     	ds	2
   196  000011                     _adc_value:
   197                           	callstack 0
   198  000011                     	ds	2
   199                           
   200                           	psect	dataCOMRAM
   201  000027                     __pdataCOMRAM:
   202                           	callstack 0
   203  000027                     _special:
   204                           	callstack 0
   205  000027                     	ds	1
   206                           
   207                           	psect	cstackCOMRAM
   208  000013                     __pcstackCOMRAM:
   209                           	callstack 0
   210  000013                     ??_ISR:
   211  000013                     
   212                           ; 1 bytes @ 0x0
   213  000013                     	ds	2
   214  000015                     ?_mapADC:
   215                           	callstack 0
   216  000015                     ?___awdiv:
   217                           	callstack 0
   218  000015                     Update7Segment@value_to_display:
   219                           	callstack 0
   220  000015                     UpdateLeds@down_up:
   221                           	callstack 0
   222  000015                     ___awdiv@dividend:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0x2
   226  000015                     	ds	2
   227  000017                     ??_Update7Segment:
   228  000017                     ___awdiv@divisor:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x4
   232  000017                     	ds	2
   233  000019                     ??_EndGame:
   234  000019                     ___awdiv@counter:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x6
   238  000019                     	ds	1
   239  00001A                     ___awdiv@sign:
   240                           	callstack 0
   241                           
   242                           ; 1 bytes @ 0x7
   243  00001A                     	ds	1
   244  00001B                     ___awdiv@quotient:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x8
   248  00001B                     	ds	2
   249  00001D                     ??_main:
   250                           
   251                           ; 1 bytes @ 0xA
   252  00001D                     	ds	4
   253                           
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 273 in file "source_headers/main.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, status,2, status,0, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   277 ;;Total ram usage:        4 bytes
   278 ;; Hardware stack levels required when called:    5
   279 ;; This function calls:
   280 ;;		_EndGame
   281 ;;		_Init
   282 ;;		_Update7Segment
   283 ;;		_UpdateLeds
   284 ;;		___awdiv
   285 ;;		_adc_complete
   286 ;;		_correct_guess
   287 ;;		_game_over
   288 ;;		_mapADC
   289 ;;		_rb4_handled
   290 ;;		_special_number
   291 ;; This function is called by:
   292 ;;		Startup code after reset
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           	psect	text0
   297  000366                     __ptext0:
   298                           	callstack 0
   299  000366                     _main:
   300                           	callstack 26
   301  000366                     
   302                           ;source_headers/main.c: 274:     Init();
   303  000366  ECAD  F003         	call	_Init	;wreg free
   304  00036A                     l1539:
   305                           
   306                           ;source_headers/main.c: 277:         if (timer0_flag){
   307  00036A  500F               	movf	_timer0_flag^0,w,c
   308  00036C  1010               	iorwf	(_timer0_flag+1)^0,w,c
   309  00036E  B4D8               	btfsc	status,2,c
   310  000370  EFBC  F001         	goto	u621
   311  000374  EFBE  F001         	goto	u620
   312  000378                     u621:
   313  000378  EFC4  F001         	goto	l1547
   314  00037C                     u620:
   315  00037C                     
   316                           ;source_headers/main.c: 278:             timer0_flag = 0;
   317  00037C  0E00               	movlw	0
   318  00037E  6E10               	movwf	(_timer0_flag+1)^0,c
   319  000380  0E00               	movlw	0
   320  000382  6E0F               	movwf	_timer0_flag^0,c
   321  000384                     
   322                           ;source_headers/main.c: 280:             ADIE = 1;
   323  000384  8C9D               	bsf	3997,6,c	;volatile
   324  000386                     
   325                           ;source_headers/main.c: 281:             GODONE = 1;
   326  000386  82C2               	bsf	4034,1,c	;volatile
   327  000388                     l1547:
   328                           
   329                           ;source_headers/main.c: 283:         if (half_sec_flag){
   330  000388  500D               	movf	_half_sec_flag^0,w,c
   331  00038A  100E               	iorwf	(_half_sec_flag+1)^0,w,c
   332  00038C  B4D8               	btfsc	status,2,c
   333  00038E  EFCB  F001         	goto	u631
   334  000392  EFCD  F001         	goto	u630
   335  000396                     u631:
   336  000396  EFE1  F001         	goto	l261
   337  00039A                     u630:
   338  00039A                     
   339                           ;source_headers/main.c: 285:             half_sec_flag = 0;
   340  00039A  0E00               	movlw	0
   341  00039C  6E0E               	movwf	(_half_sec_flag+1)^0,c
   342  00039E  0E00               	movlw	0
   343  0003A0  6E0D               	movwf	_half_sec_flag^0,c
   344  0003A2                     
   345                           ;source_headers/main.c: 286:             end_game_counter--;
   346  0003A2  0621               	decf	_end_game_counter^0,f,c
   347  0003A4  A0D8               	btfss	status,0,c
   348  0003A6  0622               	decf	(_end_game_counter+1)^0,f,c
   349  0003A8                     
   350                           ;source_headers/main.c: 287:             if(end_game_counter == 0){
   351  0003A8  5021               	movf	_end_game_counter^0,w,c
   352  0003AA  1022               	iorwf	(_end_game_counter+1)^0,w,c
   353  0003AC  A4D8               	btfss	status,2,c
   354  0003AE  EFDB  F001         	goto	u641
   355  0003B2  EFDD  F001         	goto	u640
   356  0003B6                     u641:
   357  0003B6  EFE1  F001         	goto	l261
   358  0003BA                     u640:
   359  0003BA                     
   360                           ;source_headers/main.c: 289:                 game_over();
   361  0003BA  EC2F  F004         	call	_game_over	;wreg free
   362  0003BE                     
   363                           ;source_headers/main.c: 290:                 EndGame();
   364  0003BE  ECE6  F002         	call	_EndGame	;wreg free
   365  0003C2                     l261:
   366                           
   367                           ;source_headers/main.c: 293:         if (adcon_flag){
   368  0003C2  500B               	movf	_adcon_flag^0,w,c
   369  0003C4  100C               	iorwf	(_adcon_flag+1)^0,w,c
   370  0003C6  B4D8               	btfsc	status,2,c
   371  0003C8  EFE8  F001         	goto	u651
   372  0003CC  EFEA  F001         	goto	u650
   373  0003D0                     u651:
   374  0003D0  EF25  F002         	goto	l1571
   375  0003D4                     u650:
   376  0003D4                     
   377                           ;source_headers/main.c: 294:             adcon_flag = 0;
   378  0003D4  0E00               	movlw	0
   379  0003D6  6E0C               	movwf	(_adcon_flag+1)^0,c
   380  0003D8  0E00               	movlw	0
   381  0003DA  6E0B               	movwf	_adcon_flag^0,c
   382  0003DC                     
   383                           ;source_headers/main.c: 296:             convertedDecimal = ((ADRESH & 2) / 2) * 512 + (
      +                          ADRESH & 1) * 256 + ADRESL;
   384  0003DC  CFC4 F01D          	movff	4036,??_main	;volatile
   385  0003E0  0E01               	movlw	1
   386  0003E2  161D               	andwf	??_main^0,f,c
   387  0003E4  501D               	movf	??_main^0,w,c
   388  0003E6  6E1F               	movwf	(??_main+2)^0,c
   389  0003E8  6A1E               	clrf	(??_main+1)^0,c
   390  0003EA  CFC4 F020          	movff	4036,??_main+3	;volatile
   391  0003EE  0E02               	movlw	2
   392  0003F0  1620               	andwf	(??_main+3)^0,f,c
   393  0003F2  5020               	movf	(??_main+3)^0,w,c
   394  0003F4  6E15               	movwf	___awdiv@dividend^0,c
   395  0003F6  6A16               	clrf	(___awdiv@dividend+1)^0,c
   396  0003F8  0E00               	movlw	0
   397  0003FA  6E18               	movwf	(___awdiv@divisor+1)^0,c
   398  0003FC  0E02               	movlw	2
   399  0003FE  6E17               	movwf	___awdiv@divisor^0,c
   400  000400  EC4B  F003         	call	___awdiv	;wreg free
   401  000404  0E09               	movlw	9
   402  000406                     u665:
   403  000406  90D8               	bcf	status,0,c
   404  000408  3615               	rlcf	?___awdiv^0,f,c
   405  00040A  3616               	rlcf	(?___awdiv+1)^0,f,c
   406  00040C  2EE8               	decfsz	wreg,f,c
   407  00040E  EF03  F002         	goto	u665
   408  000412  501E               	movf	(??_main+1)^0,w,c
   409  000414  2615               	addwf	?___awdiv^0,f,c
   410  000416  501F               	movf	(??_main+2)^0,w,c
   411  000418  2216               	addwfc	(?___awdiv+1)^0,f,c
   412  00041A  50C3               	movf	195,w,c	;volatile
   413  00041C  2415               	addwf	?___awdiv^0,w,c
   414  00041E  6E07               	movwf	_convertedDecimal^0,c
   415  000420  0E00               	movlw	0
   416  000422  2016               	addwfc	(?___awdiv+1)^0,w,c
   417  000424  6E08               	movwf	(_convertedDecimal+1)^0,c
   418  000426                     
   419                           ;source_headers/main.c: 297:             adc_value = convertedDecimal;
   420  000426  C007  F011         	movff	_convertedDecimal,_adc_value	;volatile
   421  00042A  C008  F012         	movff	_convertedDecimal+1,_adc_value+1	;volatile
   422  00042E                     
   423                           ;source_headers/main.c: 298:             adc_complete();
   424  00042E  EC31  F004         	call	_adc_complete	;wreg free
   425  000432                     
   426                           ;source_headers/main.c: 299:             current_guess = mapADC();
   427  000432  ECED  F000         	call	_mapADC	;wreg free
   428  000436  C015  F005         	movff	?_mapADC,_current_guess
   429  00043A  C016  F006         	movff	?_mapADC+1,_current_guess+1
   430  00043E                     
   431                           ;source_headers/main.c: 300:             Update7Segment(current_guess);
   432  00043E  C005  F015         	movff	_current_guess,Update7Segment@value_to_display
   433  000442  C006  F016         	movff	_current_guess+1,Update7Segment@value_to_display+1
   434  000446  EC72  F002         	call	_Update7Segment	;wreg free
   435  00044A                     l1571:
   436                           
   437                           ;source_headers/main.c: 302:         if (rb_flag){
   438  00044A  5009               	movf	_rb_flag^0,w,c
   439  00044C  100A               	iorwf	(_rb_flag+1)^0,w,c
   440  00044E  B4D8               	btfsc	status,2,c
   441  000450  EF2C  F002         	goto	u671
   442  000454  EF2E  F002         	goto	u670
   443  000458                     u671:
   444  000458  EFB5  F001         	goto	l1539
   445  00045C                     u670:
   446  00045C                     
   447                           ;source_headers/main.c: 303:             rb_flag = 0;
   448  00045C  0E00               	movlw	0
   449  00045E  6E0A               	movwf	(_rb_flag+1)^0,c
   450  000460  0E00               	movlw	0
   451  000462  6E09               	movwf	_rb_flag^0,c
   452  000464                     
   453                           ;source_headers/main.c: 304:             rb4_handled();
   454  000464  EC2E  F004         	call	_rb4_handled	;wreg free
   455  000468                     
   456                           ;source_headers/main.c: 307:             if (current_guess > special_number())
   457  000468  EC2C  F004         	call	_special_number	;wreg free
   458  00046C  6E1D               	movwf	??_main^0,c
   459  00046E  6A1E               	clrf	(??_main+1)^0,c
   460  000470  5005               	movf	_current_guess^0,w,c
   461  000472  5C1D               	subwf	??_main^0,w,c
   462  000474  501E               	movf	(??_main+1)^0,w,c
   463  000476  0A80               	xorlw	128
   464  000478  6E1F               	movwf	(??_main+2)^0,c
   465  00047A  5006               	movf	(_current_guess+1)^0,w,c
   466  00047C  0A80               	xorlw	128
   467  00047E  581F               	subwfb	(??_main+2)^0,w,c
   468  000480  B0D8               	btfsc	status,0,c
   469  000482  EF45  F002         	goto	u681
   470  000486  EF47  F002         	goto	u680
   471  00048A                     u681:
   472  00048A  EF4F  F002         	goto	l1581
   473  00048E                     u680:
   474  00048E                     
   475                           ;source_headers/main.c: 308:                 UpdateLeds (0);
   476  00048E  0E00               	movlw	0
   477  000490  6E16               	movwf	(UpdateLeds@down_up+1)^0,c
   478  000492  0E00               	movlw	0
   479  000494  6E15               	movwf	UpdateLeds@down_up^0,c
   480  000496  ECE7  F003         	call	_UpdateLeds	;wreg free
   481  00049A  EFB5  F001         	goto	l1539
   482  00049E                     l1581:
   483  00049E  EC2C  F004         	call	_special_number	;wreg free
   484  0004A2  6E1D               	movwf	??_main^0,c
   485  0004A4  6A1E               	clrf	(??_main+1)^0,c
   486  0004A6  501D               	movf	??_main^0,w,c
   487  0004A8  5C05               	subwf	_current_guess^0,w,c
   488  0004AA  5006               	movf	(_current_guess+1)^0,w,c
   489  0004AC  0A80               	xorlw	128
   490  0004AE  6E1F               	movwf	(??_main+2)^0,c
   491  0004B0  501E               	movf	(??_main+1)^0,w,c
   492  0004B2  0A80               	xorlw	128
   493  0004B4  581F               	subwfb	(??_main+2)^0,w,c
   494  0004B6  B0D8               	btfsc	status,0,c
   495  0004B8  EF60  F002         	goto	u691
   496  0004BC  EF62  F002         	goto	u690
   497  0004C0                     u691:
   498  0004C0  EF6A  F002         	goto	l1585
   499  0004C4                     u690:
   500  0004C4                     
   501                           ;source_headers/main.c: 310:                 UpdateLeds (1);
   502  0004C4  0E00               	movlw	0
   503  0004C6  6E16               	movwf	(UpdateLeds@down_up+1)^0,c
   504  0004C8  0E01               	movlw	1
   505  0004CA  6E15               	movwf	UpdateLeds@down_up^0,c
   506  0004CC  ECE7  F003         	call	_UpdateLeds	;wreg free
   507  0004D0  EFB5  F001         	goto	l1539
   508  0004D4                     l1585:
   509                           
   510                           ;source_headers/main.c: 312:             {;source_headers/main.c: 313:                 c
      +                          orrect_guess();
   511  0004D4  EC30  F004         	call	_correct_guess	;wreg free
   512  0004D8                     
   513                           ;source_headers/main.c: 314:                 EndGame();
   514  0004D8  ECE6  F002         	call	_EndGame	;wreg free
   515  0004DC  EFB5  F001         	goto	l1539
   516  0004E0  EF07  F000         	goto	start
   517  0004E4                     __end_of_main:
   518                           	callstack 0
   519                           
   520 ;; *************** function _rb4_handled *****************
   521 ;; Defined at:
   522 ;;		line 7 in file "source_headers/breakpoints.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		None
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;Total ram usage:        0 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    2
   543 ;; This function calls:
   544 ;;		Nothing
   545 ;; This function is called by:
   546 ;;		_main
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           	psect	text1
   551  00085C                     __ptext1:
   552                           	callstack 0
   553  00085C                     _rb4_handled:
   554                           	callstack 28
   555  00085C  0012               	return		;funcret
   556  00085E                     __end_of_rb4_handled:
   557                           	callstack 0
   558                           
   559 ;; *************** function _mapADC *****************
   560 ;; Defined at:
   561 ;;		line 19 in file "source_headers/main.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  2    2[COMRAM] int 
   568 ;; Registers used:
   569 ;;		wreg, status,2, status,0
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;Total ram usage:        2 bytes
   580 ;; Hardware stack levels used:    1
   581 ;; Hardware stack levels required when called:    2
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		_main
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           	psect	text2
   590  0001DA                     __ptext2:
   591                           	callstack 0
   592  0001DA                     _mapADC:
   593                           	callstack 28
   594  0001DA                     
   595                           ;source_headers/main.c: 21:     if (convertedDecimal <= 102)
   596  0001DA  BE08               	btfsc	(_convertedDecimal+1)^0,7,c
   597  0001DC  EFFB  F000         	goto	u420
   598  0001E0  5008               	movf	(_convertedDecimal+1)^0,w,c
   599  0001E2  E107               	bnz	u421
   600  0001E4  0E67               	movlw	103
   601  0001E6  5C07               	subwf	_convertedDecimal^0,w,c
   602  0001E8  B0D8               	btfsc	status,0,c
   603  0001EA  EFF9  F000         	goto	u421
   604  0001EE  EFFB  F000         	goto	u420
   605  0001F2                     u421:
   606  0001F2  EF01  F001         	goto	l1391
   607  0001F6                     u420:
   608  0001F6                     
   609                           ;source_headers/main.c: 22:         return 0;
   610  0001F6  0E00               	movlw	0
   611  0001F8  6E16               	movwf	(?_mapADC+1)^0,c
   612  0001FA  0E00               	movlw	0
   613  0001FC  6E15               	movwf	?_mapADC^0,c
   614  0001FE  EFB2  F001         	goto	l164
   615  000202                     l1391:
   616  000202  BE08               	btfsc	(_convertedDecimal+1)^0,7,c
   617  000204  EF0F  F001         	goto	u430
   618  000208  5008               	movf	(_convertedDecimal+1)^0,w,c
   619  00020A  E107               	bnz	u431
   620  00020C  0ECD               	movlw	205
   621  00020E  5C07               	subwf	_convertedDecimal^0,w,c
   622  000210  B0D8               	btfsc	status,0,c
   623  000212  EF0D  F001         	goto	u431
   624  000216  EF0F  F001         	goto	u430
   625  00021A                     u431:
   626  00021A  EF15  F001         	goto	l1399
   627  00021E                     u430:
   628  00021E                     
   629                           ;source_headers/main.c: 24:         return 1;
   630  00021E  0E00               	movlw	0
   631  000220  6E16               	movwf	(?_mapADC+1)^0,c
   632  000222  0E01               	movlw	1
   633  000224  6E15               	movwf	?_mapADC^0,c
   634  000226  EFB2  F001         	goto	l164
   635  00022A                     l1399:
   636  00022A  BE08               	btfsc	(_convertedDecimal+1)^0,7,c
   637  00022C  EF23  F001         	goto	u440
   638  000230  0E33               	movlw	51
   639  000232  5C07               	subwf	_convertedDecimal^0,w,c
   640  000234  0E01               	movlw	1
   641  000236  5808               	subwfb	(_convertedDecimal+1)^0,w,c
   642  000238  B0D8               	btfsc	status,0,c
   643  00023A  EF21  F001         	goto	u441
   644  00023E  EF23  F001         	goto	u440
   645  000242                     u441:
   646  000242  EF29  F001         	goto	l1407
   647  000246                     u440:
   648  000246                     
   649                           ;source_headers/main.c: 26:         return 2;
   650  000246  0E00               	movlw	0
   651  000248  6E16               	movwf	(?_mapADC+1)^0,c
   652  00024A  0E02               	movlw	2
   653  00024C  6E15               	movwf	?_mapADC^0,c
   654  00024E  EFB2  F001         	goto	l164
   655  000252                     l1407:
   656  000252  BE08               	btfsc	(_convertedDecimal+1)^0,7,c
   657  000254  EF37  F001         	goto	u450
   658  000258  0E99               	movlw	153
   659  00025A  5C07               	subwf	_convertedDecimal^0,w,c
   660  00025C  0E01               	movlw	1
   661  00025E  5808               	subwfb	(_convertedDecimal+1)^0,w,c
   662  000260  B0D8               	btfsc	status,0,c
   663  000262  EF35  F001         	goto	u451
   664  000266  EF37  F001         	goto	u450
   665  00026A                     u451:
   666  00026A  EF3D  F001         	goto	l1415
   667  00026E                     u450:
   668  00026E                     
   669                           ;source_headers/main.c: 28:         return 3;
   670  00026E  0E00               	movlw	0
   671  000270  6E16               	movwf	(?_mapADC+1)^0,c
   672  000272  0E03               	movlw	3
   673  000274  6E15               	movwf	?_mapADC^0,c
   674  000276  EFB2  F001         	goto	l164
   675  00027A                     l1415:
   676  00027A  BE08               	btfsc	(_convertedDecimal+1)^0,7,c
   677  00027C  EF4A  F001         	goto	u460
   678  000280  2807               	incf	_convertedDecimal^0,w,c
   679  000282  0E01               	movlw	1
   680  000284  5808               	subwfb	(_convertedDecimal+1)^0,w,c
   681  000286  B0D8               	btfsc	status,0,c
   682  000288  EF48  F001         	goto	u461
   683  00028C  EF4A  F001         	goto	u460
   684  000290                     u461:
   685  000290  EF50  F001         	goto	l1423
   686  000294                     u460:
   687  000294                     
   688                           ;source_headers/main.c: 30:         return 4;
   689  000294  0E00               	movlw	0
   690  000296  6E16               	movwf	(?_mapADC+1)^0,c
   691  000298  0E04               	movlw	4
   692  00029A  6E15               	movwf	?_mapADC^0,c
   693  00029C  EFB2  F001         	goto	l164
   694  0002A0                     l1423:
   695  0002A0  BE08               	btfsc	(_convertedDecimal+1)^0,7,c
   696  0002A2  EF5E  F001         	goto	u470
   697  0002A6  0E65               	movlw	101
   698  0002A8  5C07               	subwf	_convertedDecimal^0,w,c
   699  0002AA  0E02               	movlw	2
   700  0002AC  5808               	subwfb	(_convertedDecimal+1)^0,w,c
   701  0002AE  B0D8               	btfsc	status,0,c
   702  0002B0  EF5C  F001         	goto	u471
   703  0002B4  EF5E  F001         	goto	u470
   704  0002B8                     u471:
   705  0002B8  EF64  F001         	goto	l1431
   706  0002BC                     u470:
   707  0002BC                     
   708                           ;source_headers/main.c: 32:         return 5;
   709  0002BC  0E00               	movlw	0
   710  0002BE  6E16               	movwf	(?_mapADC+1)^0,c
   711  0002C0  0E05               	movlw	5
   712  0002C2  6E15               	movwf	?_mapADC^0,c
   713  0002C4  EFB2  F001         	goto	l164
   714  0002C8                     l1431:
   715  0002C8  BE08               	btfsc	(_convertedDecimal+1)^0,7,c
   716  0002CA  EF72  F001         	goto	u480
   717  0002CE  0ECB               	movlw	203
   718  0002D0  5C07               	subwf	_convertedDecimal^0,w,c
   719  0002D2  0E02               	movlw	2
   720  0002D4  5808               	subwfb	(_convertedDecimal+1)^0,w,c
   721  0002D6  B0D8               	btfsc	status,0,c
   722  0002D8  EF70  F001         	goto	u481
   723  0002DC  EF72  F001         	goto	u480
   724  0002E0                     u481:
   725  0002E0  EF78  F001         	goto	l1439
   726  0002E4                     u480:
   727  0002E4                     
   728                           ;source_headers/main.c: 34:         return 6;
   729  0002E4  0E00               	movlw	0
   730  0002E6  6E16               	movwf	(?_mapADC+1)^0,c
   731  0002E8  0E06               	movlw	6
   732  0002EA  6E15               	movwf	?_mapADC^0,c
   733  0002EC  EFB2  F001         	goto	l164
   734  0002F0                     l1439:
   735  0002F0  BE08               	btfsc	(_convertedDecimal+1)^0,7,c
   736  0002F2  EF86  F001         	goto	u490
   737  0002F6  0E31               	movlw	49
   738  0002F8  5C07               	subwf	_convertedDecimal^0,w,c
   739  0002FA  0E03               	movlw	3
   740  0002FC  5808               	subwfb	(_convertedDecimal+1)^0,w,c
   741  0002FE  B0D8               	btfsc	status,0,c
   742  000300  EF84  F001         	goto	u491
   743  000304  EF86  F001         	goto	u490
   744  000308                     u491:
   745  000308  EF8C  F001         	goto	l1447
   746  00030C                     u490:
   747  00030C                     
   748                           ;source_headers/main.c: 36:         return 7;
   749  00030C  0E00               	movlw	0
   750  00030E  6E16               	movwf	(?_mapADC+1)^0,c
   751  000310  0E07               	movlw	7
   752  000312  6E15               	movwf	?_mapADC^0,c
   753  000314  EFB2  F001         	goto	l164
   754  000318                     l1447:
   755  000318  BE08               	btfsc	(_convertedDecimal+1)^0,7,c
   756  00031A  EF9A  F001         	goto	u500
   757  00031E  0E97               	movlw	151
   758  000320  5C07               	subwf	_convertedDecimal^0,w,c
   759  000322  0E03               	movlw	3
   760  000324  5808               	subwfb	(_convertedDecimal+1)^0,w,c
   761  000326  B0D8               	btfsc	status,0,c
   762  000328  EF98  F001         	goto	u501
   763  00032C  EF9A  F001         	goto	u500
   764  000330                     u501:
   765  000330  EFA0  F001         	goto	l1455
   766  000334                     u500:
   767  000334                     
   768                           ;source_headers/main.c: 38:         return 8;
   769  000334  0E00               	movlw	0
   770  000336  6E16               	movwf	(?_mapADC+1)^0,c
   771  000338  0E08               	movlw	8
   772  00033A  6E15               	movwf	?_mapADC^0,c
   773  00033C  EFB2  F001         	goto	l164
   774  000340                     l1455:
   775  000340  BE08               	btfsc	(_convertedDecimal+1)^0,7,c
   776  000342  EFAC  F001         	goto	u510
   777  000346  0E04               	movlw	4
   778  000348  5C08               	subwf	(_convertedDecimal+1)^0,w,c
   779  00034A  B0D8               	btfsc	status,0,c
   780  00034C  EFAA  F001         	goto	u511
   781  000350  EFAC  F001         	goto	u510
   782  000354                     u511:
   783  000354  EFB2  F001         	goto	l177
   784  000358                     u510:
   785  000358                     
   786                           ;source_headers/main.c: 40:         return 9;
   787  000358  0E00               	movlw	0
   788  00035A  6E16               	movwf	(?_mapADC+1)^0,c
   789  00035C  0E09               	movlw	9
   790  00035E  6E15               	movwf	?_mapADC^0,c
   791  000360  EFB2  F001         	goto	l164
   792  000364                     l177:
   793  000364                     l164:
   794  000364  0012               	return		;funcret
   795  000366                     __end_of_mapADC:
   796                           	callstack 0
   797                           
   798 ;; *************** function _game_over *****************
   799 ;; Defined at:
   800 ;;		line 12 in file "source_headers/breakpoints.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;		None
   803 ;; Auto vars:     Size  Location     Type
   804 ;;		None
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		None
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;Total ram usage:        0 bytes
   819 ;; Hardware stack levels used:    1
   820 ;; Hardware stack levels required when called:    2
   821 ;; This function calls:
   822 ;;		Nothing
   823 ;; This function is called by:
   824 ;;		_main
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           	psect	text3
   829  00085E                     __ptext3:
   830                           	callstack 0
   831  00085E                     _game_over:
   832                           	callstack 28
   833  00085E  0012               	return		;funcret
   834  000860                     __end_of_game_over:
   835                           	callstack 0
   836                           
   837 ;; *************** function _correct_guess *****************
   838 ;; Defined at:
   839 ;;		line 10 in file "source_headers/breakpoints.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		None
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;Total ram usage:        0 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; Hardware stack levels required when called:    2
   860 ;; This function calls:
   861 ;;		Nothing
   862 ;; This function is called by:
   863 ;;		_main
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text4
   868  000860                     __ptext4:
   869                           	callstack 0
   870  000860                     _correct_guess:
   871                           	callstack 28
   872  000860  0012               	return		;funcret
   873  000862                     __end_of_correct_guess:
   874                           	callstack 0
   875                           
   876 ;; *************** function _adc_complete *****************
   877 ;; Defined at:
   878 ;;		line 6 in file "source_headers/breakpoints.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		None
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;Total ram usage:        0 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; Hardware stack levels required when called:    2
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text5
   907  000862                     __ptext5:
   908                           	callstack 0
   909  000862                     _adc_complete:
   910                           	callstack 28
   911  000862  0012               	return		;funcret
   912  000864                     __end_of_adc_complete:
   913                           	callstack 0
   914                           
   915 ;; *************** function ___awdiv *****************
   916 ;; Defined at:
   917 ;;		line 7 in file "/opt/microchip/xc8/v2.20/pic/sources/c99/common/awdiv.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  dividend        2    2[COMRAM] int 
   920 ;;  divisor         2    4[COMRAM] int 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  quotient        2    8[COMRAM] int 
   923 ;;  sign            1    7[COMRAM] unsigned char 
   924 ;;  counter         1    6[COMRAM] unsigned char 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  2    2[COMRAM] int 
   927 ;; Registers used:
   928 ;;		wreg, status,2, status,0
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;Total ram usage:        8 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; Hardware stack levels required when called:    2
   941 ;; This function calls:
   942 ;;		Nothing
   943 ;; This function is called by:
   944 ;;		_main
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text6
   949  000696                     __ptext6:
   950                           	callstack 0
   951  000696                     ___awdiv:
   952                           	callstack 28
   953  000696  0E00               	movlw	0
   954  000698  6E1A               	movwf	___awdiv@sign^0,c
   955  00069A  BE18               	btfsc	(___awdiv@divisor+1)^0,7,c
   956  00069C  EF54  F003         	goto	u560
   957  0006A0  EF52  F003         	goto	u561
   958  0006A4                     u561:
   959  0006A4  EF5A  F003         	goto	l1501
   960  0006A8                     u560:
   961  0006A8  6C17               	negf	___awdiv@divisor^0,c
   962  0006AA  1E18               	comf	(___awdiv@divisor+1)^0,f,c
   963  0006AC  B0D8               	btfsc	status,0,c
   964  0006AE  2A18               	incf	(___awdiv@divisor+1)^0,f,c
   965  0006B0  0E01               	movlw	1
   966  0006B2  6E1A               	movwf	___awdiv@sign^0,c
   967  0006B4                     l1501:
   968  0006B4  BE16               	btfsc	(___awdiv@dividend+1)^0,7,c
   969  0006B6  EF61  F003         	goto	u570
   970  0006BA  EF5F  F003         	goto	u571
   971  0006BE                     u571:
   972  0006BE  EF67  F003         	goto	l1507
   973  0006C2                     u570:
   974  0006C2  6C15               	negf	___awdiv@dividend^0,c
   975  0006C4  1E16               	comf	(___awdiv@dividend+1)^0,f,c
   976  0006C6  B0D8               	btfsc	status,0,c
   977  0006C8  2A16               	incf	(___awdiv@dividend+1)^0,f,c
   978  0006CA  0E01               	movlw	1
   979  0006CC  1A1A               	xorwf	___awdiv@sign^0,f,c
   980  0006CE                     l1507:
   981  0006CE  0E00               	movlw	0
   982  0006D0  6E1C               	movwf	(___awdiv@quotient+1)^0,c
   983  0006D2  0E00               	movlw	0
   984  0006D4  6E1B               	movwf	___awdiv@quotient^0,c
   985  0006D6  5017               	movf	___awdiv@divisor^0,w,c
   986  0006D8  1018               	iorwf	(___awdiv@divisor+1)^0,w,c
   987  0006DA  B4D8               	btfsc	status,2,c
   988  0006DC  EF72  F003         	goto	u581
   989  0006E0  EF74  F003         	goto	u580
   990  0006E4                     u581:
   991  0006E4  EF9C  F003         	goto	l1529
   992  0006E8                     u580:
   993  0006E8  0E01               	movlw	1
   994  0006EA  6E19               	movwf	___awdiv@counter^0,c
   995  0006EC  EF7C  F003         	goto	l1515
   996  0006F0                     l1513:
   997  0006F0  90D8               	bcf	status,0,c
   998  0006F2  3617               	rlcf	___awdiv@divisor^0,f,c
   999  0006F4  3618               	rlcf	(___awdiv@divisor+1)^0,f,c
  1000  0006F6  2A19               	incf	___awdiv@counter^0,f,c
  1001  0006F8                     l1515:
  1002  0006F8  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  1003  0006FA  EF81  F003         	goto	u591
  1004  0006FE  EF83  F003         	goto	u590
  1005  000702                     u591:
  1006  000702  EF78  F003         	goto	l1513
  1007  000706                     u590:
  1008  000706                     l1517:
  1009  000706  90D8               	bcf	status,0,c
  1010  000708  361B               	rlcf	___awdiv@quotient^0,f,c
  1011  00070A  361C               	rlcf	(___awdiv@quotient+1)^0,f,c
  1012  00070C  5017               	movf	___awdiv@divisor^0,w,c
  1013  00070E  5C15               	subwf	___awdiv@dividend^0,w,c
  1014  000710  5018               	movf	(___awdiv@divisor+1)^0,w,c
  1015  000712  5816               	subwfb	(___awdiv@dividend+1)^0,w,c
  1016  000714  A0D8               	btfss	status,0,c
  1017  000716  EF8F  F003         	goto	u601
  1018  00071A  EF91  F003         	goto	u600
  1019  00071E                     u601:
  1020  00071E  EF96  F003         	goto	l1525
  1021  000722                     u600:
  1022  000722  5017               	movf	___awdiv@divisor^0,w,c
  1023  000724  5E15               	subwf	___awdiv@dividend^0,f,c
  1024  000726  5018               	movf	(___awdiv@divisor+1)^0,w,c
  1025  000728  5A16               	subwfb	(___awdiv@dividend+1)^0,f,c
  1026  00072A  801B               	bsf	___awdiv@quotient^0,0,c
  1027  00072C                     l1525:
  1028  00072C  90D8               	bcf	status,0,c
  1029  00072E  3218               	rrcf	(___awdiv@divisor+1)^0,f,c
  1030  000730  3217               	rrcf	___awdiv@divisor^0,f,c
  1031  000732  2E19               	decfsz	___awdiv@counter^0,f,c
  1032  000734  EF83  F003         	goto	l1517
  1033  000738                     l1529:
  1034  000738  501A               	movf	___awdiv@sign^0,w,c
  1035  00073A  B4D8               	btfsc	status,2,c
  1036  00073C  EFA2  F003         	goto	u611
  1037  000740  EFA4  F003         	goto	u610
  1038  000744                     u611:
  1039  000744  EFA8  F003         	goto	l1533
  1040  000748                     u610:
  1041  000748  6C1B               	negf	___awdiv@quotient^0,c
  1042  00074A  1E1C               	comf	(___awdiv@quotient+1)^0,f,c
  1043  00074C  B0D8               	btfsc	status,0,c
  1044  00074E  2A1C               	incf	(___awdiv@quotient+1)^0,f,c
  1045  000750                     l1533:
  1046  000750  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  1047  000754  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  1048  000758  0012               	return		;funcret
  1049  00075A                     __end_of___awdiv:
  1050                           	callstack 0
  1051                           
  1052 ;; *************** function _EndGame *****************
  1053 ;; Defined at:
  1054 ;;		line 250 in file "source_headers/main.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, status,2, status,0, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;Total ram usage:        1 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    4
  1075 ;; This function calls:
  1076 ;;		_Init
  1077 ;;		_Update7Segment
  1078 ;;		_UpdateLeds
  1079 ;;		_restart
  1080 ;;		_special_number
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text7
  1087  0005CC                     __ptext7:
  1088                           	callstack 0
  1089  0005CC                     _EndGame:
  1090                           	callstack 26
  1091  0005CC                     
  1092                           ;source_headers/main.c: 252:     UpdateLeds(2);
  1093  0005CC  0E00               	movlw	0
  1094  0005CE  6E16               	movwf	(UpdateLeds@down_up+1)^0,c
  1095  0005D0  0E02               	movlw	2
  1096  0005D2  6E15               	movwf	UpdateLeds@down_up^0,c
  1097  0005D4  ECE7  F003         	call	_UpdateLeds	;wreg free
  1098                           
  1099                           ;source_headers/main.c: 253:     Update7Segment(special_number());
  1100  0005D8  EC2C  F004         	call	_special_number	;wreg free
  1101  0005DC  6E19               	movwf	??_EndGame^0,c
  1102  0005DE  5019               	movf	??_EndGame^0,w,c
  1103  0005E0  6E15               	movwf	Update7Segment@value_to_display^0,c
  1104  0005E2  6A16               	clrf	(Update7Segment@value_to_display+1)^0,c
  1105  0005E4  EC72  F002         	call	_Update7Segment	;wreg free
  1106  0005E8                     
  1107                           ;source_headers/main.c: 255:     TMR1 = 3036;
  1108  0005E8  0E0B               	movlw	11
  1109  0005EA  6ECF               	movwf	207,c	;volatile
  1110  0005EC  0EDC               	movlw	220
  1111  0005EE  6ECE               	movwf	206,c	;volatile
  1112  0005F0                     
  1113                           ;source_headers/main.c: 256:     timer1_counter = 10;
  1114  0005F0  0E00               	movlw	0
  1115  0005F2  6E24               	movwf	(_timer1_counter+1)^0,c
  1116  0005F4  0E0A               	movlw	10
  1117  0005F6  6E23               	movwf	_timer1_counter^0,c
  1118  0005F8                     
  1119                           ;source_headers/main.c: 257:     half_sec_flag = 0;
  1120  0005F8  0E00               	movlw	0
  1121  0005FA  6E0E               	movwf	(_half_sec_flag+1)^0,c
  1122  0005FC  0E00               	movlw	0
  1123  0005FE  6E0D               	movwf	_half_sec_flag^0,c
  1124  000600                     l1469:
  1125  000600  500D               	movf	_half_sec_flag^0,w,c
  1126  000602  100E               	iorwf	(_half_sec_flag+1)^0,w,c
  1127  000604  B4D8               	btfsc	status,2,c
  1128  000606  EF07  F003         	goto	u521
  1129  00060A  EF09  F003         	goto	u520
  1130  00060E                     u521:
  1131  00060E  EF00  F003         	goto	l1469
  1132  000612                     u520:
  1133  000612                     
  1134                           ;source_headers/main.c: 259:     half_sec_flag = 0;
  1135  000612  0E00               	movlw	0
  1136  000614  6E0E               	movwf	(_half_sec_flag+1)^0,c
  1137  000616  0E00               	movlw	0
  1138  000618  6E0D               	movwf	_half_sec_flag^0,c
  1139  00061A                     
  1140                           ;source_headers/main.c: 260:     Update7Segment(-1);
  1141  00061A  0EFF               	movlw	255
  1142  00061C  6E16               	movwf	(Update7Segment@value_to_display+1)^0,c
  1143  00061E  6815               	setf	Update7Segment@value_to_display^0,c
  1144  000620  EC72  F002         	call	_Update7Segment	;wreg free
  1145  000624                     l1475:
  1146  000624  500D               	movf	_half_sec_flag^0,w,c
  1147  000626  100E               	iorwf	(_half_sec_flag+1)^0,w,c
  1148  000628  B4D8               	btfsc	status,2,c
  1149  00062A  EF19  F003         	goto	u531
  1150  00062E  EF1B  F003         	goto	u530
  1151  000632                     u531:
  1152  000632  EF12  F003         	goto	l1475
  1153  000636                     u530:
  1154  000636                     
  1155                           ;source_headers/main.c: 262:     half_sec_flag = 0;
  1156  000636  0E00               	movlw	0
  1157  000638  6E0E               	movwf	(_half_sec_flag+1)^0,c
  1158  00063A  0E00               	movlw	0
  1159  00063C  6E0D               	movwf	_half_sec_flag^0,c
  1160  00063E                     
  1161                           ;source_headers/main.c: 263:     Update7Segment(special_number());
  1162  00063E  EC2C  F004         	call	_special_number	;wreg free
  1163  000642  6E19               	movwf	??_EndGame^0,c
  1164  000644  5019               	movf	??_EndGame^0,w,c
  1165  000646  6E15               	movwf	Update7Segment@value_to_display^0,c
  1166  000648  6A16               	clrf	(Update7Segment@value_to_display+1)^0,c
  1167  00064A  EC72  F002         	call	_Update7Segment	;wreg free
  1168  00064E                     l1481:
  1169  00064E  500D               	movf	_half_sec_flag^0,w,c
  1170  000650  100E               	iorwf	(_half_sec_flag+1)^0,w,c
  1171  000652  B4D8               	btfsc	status,2,c
  1172  000654  EF2E  F003         	goto	u541
  1173  000658  EF30  F003         	goto	u540
  1174  00065C                     u541:
  1175  00065C  EF27  F003         	goto	l1481
  1176  000660                     u540:
  1177  000660                     
  1178                           ;source_headers/main.c: 265:     half_sec_flag = 0;
  1179  000660  0E00               	movlw	0
  1180  000662  6E0E               	movwf	(_half_sec_flag+1)^0,c
  1181  000664  0E00               	movlw	0
  1182  000666  6E0D               	movwf	_half_sec_flag^0,c
  1183  000668                     
  1184                           ;source_headers/main.c: 266:     Update7Segment(-1);
  1185  000668  0EFF               	movlw	255
  1186  00066A  6E16               	movwf	(Update7Segment@value_to_display+1)^0,c
  1187  00066C  6815               	setf	Update7Segment@value_to_display^0,c
  1188  00066E  EC72  F002         	call	_Update7Segment	;wreg free
  1189  000672                     l1487:
  1190  000672  500D               	movf	_half_sec_flag^0,w,c
  1191  000674  100E               	iorwf	(_half_sec_flag+1)^0,w,c
  1192  000676  B4D8               	btfsc	status,2,c
  1193  000678  EF40  F003         	goto	u551
  1194  00067C  EF42  F003         	goto	u550
  1195  000680                     u551:
  1196  000680  EF39  F003         	goto	l1487
  1197  000684                     u550:
  1198  000684                     
  1199                           ;source_headers/main.c: 268:     half_sec_flag = 0;
  1200  000684  0E00               	movlw	0
  1201  000686  6E0E               	movwf	(_half_sec_flag+1)^0,c
  1202  000688  0E00               	movlw	0
  1203  00068A  6E0D               	movwf	_half_sec_flag^0,c
  1204  00068C                     
  1205                           ;source_headers/main.c: 269:     Init();
  1206  00068C  ECAD  F003         	call	_Init	;wreg free
  1207                           
  1208                           ;source_headers/main.c: 270:     restart();
  1209  000690  EC32  F004         	call	_restart	;wreg free
  1210  000694  0012               	return		;funcret
  1211  000696                     __end_of_EndGame:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _special_number *****************
  1215 ;; Defined at:
  1216 ;;		line 14 in file "source_headers/breakpoints.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      unsigned char 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;Total ram usage:        0 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; Hardware stack levels required when called:    2
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_EndGame
  1241 ;;		_main
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text8
  1246  000858                     __ptext8:
  1247                           	callstack 0
  1248  000858                     _special_number:
  1249                           	callstack 28
  1250  000858  5027               	movf	_special^0,w,c	;volatile
  1251  00085A  0012               	return		;funcret
  1252  00085C                     __end_of_special_number:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function _restart *****************
  1256 ;; Defined at:
  1257 ;;		line 13 in file "source_headers/breakpoints.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		None
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;Total ram usage:        0 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:    2
  1278 ;; This function calls:
  1279 ;;		Nothing
  1280 ;; This function is called by:
  1281 ;;		_EndGame
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text9
  1286  000864                     __ptext9:
  1287                           	callstack 0
  1288  000864                     _restart:
  1289                           	callstack 27
  1290  000864  0012               	return		;funcret
  1291  000866                     __end_of_restart:
  1292                           	callstack 0
  1293                           
  1294 ;; *************** function _UpdateLeds *****************
  1295 ;; Defined at:
  1296 ;;		line 208 in file "source_headers/main.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  down_up         2    2[COMRAM] int 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;		None
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg, status,2, status,0, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1310 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;Total ram usage:        2 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    3
  1317 ;; This function calls:
  1318 ;;		_latcde_update_complete
  1319 ;; This function is called by:
  1320 ;;		_EndGame
  1321 ;;		_main
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text10
  1326  0007CE                     __ptext10:
  1327                           	callstack 0
  1328  0007CE                     _UpdateLeds:
  1329                           	callstack 27
  1330  0007CE                     
  1331                           ;source_headers/main.c: 211:     if (down_up==0){
  1332  0007CE  5015               	movf	UpdateLeds@down_up^0,w,c
  1333  0007D0  1016               	iorwf	(UpdateLeds@down_up+1)^0,w,c
  1334  0007D2  A4D8               	btfss	status,2,c
  1335  0007D4  EFEE  F003         	goto	u401
  1336  0007D8  EFF0  F003         	goto	u400
  1337  0007DC                     u401:
  1338  0007DC  EFFA  F003         	goto	l1377
  1339  0007E0                     u400:
  1340  0007E0                     
  1341                           ;source_headers/main.c: 213:         LATD0=1;
  1342  0007E0  808C               	bsf	3980,0,c	;volatile
  1343                           
  1344                           ;source_headers/main.c: 214:         LATD1=1;
  1345  0007E2  828C               	bsf	3980,1,c	;volatile
  1346                           
  1347                           ;source_headers/main.c: 215:         LATD2=1;
  1348  0007E4  848C               	bsf	3980,2,c	;volatile
  1349                           
  1350                           ;source_headers/main.c: 216:         LATD3=1;
  1351  0007E6  868C               	bsf	3980,3,c	;volatile
  1352                           
  1353                           ;source_headers/main.c: 218:         LATC1=0;
  1354  0007E8  928B               	bcf	3979,1,c	;volatile
  1355                           
  1356                           ;source_headers/main.c: 219:         LATE1=0;
  1357  0007EA  928D               	bcf	3981,1,c	;volatile
  1358                           
  1359                           ;source_headers/main.c: 220:         LATC2=1;
  1360  0007EC  848B               	bsf	3979,2,c	;volatile
  1361                           
  1362                           ;source_headers/main.c: 221:         LATE2=1;
  1363  0007EE  848D               	bsf	3981,2,c	;volatile
  1364                           
  1365                           ;source_headers/main.c: 222:     }
  1366  0007F0  EF15  F004         	goto	l1381
  1367  0007F4                     l1377:
  1368  0007F4  0415               	decf	UpdateLeds@down_up^0,w,c
  1369  0007F6  1016               	iorwf	(UpdateLeds@down_up+1)^0,w,c
  1370  0007F8  A4D8               	btfss	status,2,c
  1371  0007FA  EF01  F004         	goto	u411
  1372  0007FE  EF03  F004         	goto	u410
  1373  000802                     u411:
  1374  000802  EF0D  F004         	goto	l237
  1375  000806                     u410:
  1376  000806                     
  1377                           ;source_headers/main.c: 225:         LATD0=1;
  1378  000806  808C               	bsf	3980,0,c	;volatile
  1379                           
  1380                           ;source_headers/main.c: 226:         LATD1=1;
  1381  000808  828C               	bsf	3980,1,c	;volatile
  1382                           
  1383                           ;source_headers/main.c: 227:         LATD2=1;
  1384  00080A  848C               	bsf	3980,2,c	;volatile
  1385                           
  1386                           ;source_headers/main.c: 228:         LATD3=1;
  1387  00080C  868C               	bsf	3980,3,c	;volatile
  1388                           
  1389                           ;source_headers/main.c: 230:         LATC1=1;
  1390  00080E  828B               	bsf	3979,1,c	;volatile
  1391                           
  1392                           ;source_headers/main.c: 231:         LATE1=1;
  1393  000810  828D               	bsf	3981,1,c	;volatile
  1394                           
  1395                           ;source_headers/main.c: 232:         LATC2=0;
  1396  000812  948B               	bcf	3979,2,c	;volatile
  1397                           
  1398                           ;source_headers/main.c: 233:         LATE2=0;
  1399  000814  948D               	bcf	3981,2,c	;volatile
  1400                           
  1401                           ;source_headers/main.c: 234:     }
  1402  000816  EF15  F004         	goto	l1381
  1403  00081A                     l237:
  1404                           
  1405                           ;source_headers/main.c: 237:         LATD0=0;
  1406  00081A  908C               	bcf	3980,0,c	;volatile
  1407                           
  1408                           ;source_headers/main.c: 238:         LATD1=0;
  1409  00081C  928C               	bcf	3980,1,c	;volatile
  1410                           
  1411                           ;source_headers/main.c: 239:         LATD2=0;
  1412  00081E  948C               	bcf	3980,2,c	;volatile
  1413                           
  1414                           ;source_headers/main.c: 240:         LATD3=0;
  1415  000820  968C               	bcf	3980,3,c	;volatile
  1416                           
  1417                           ;source_headers/main.c: 242:         LATC1=0;
  1418  000822  928B               	bcf	3979,1,c	;volatile
  1419                           
  1420                           ;source_headers/main.c: 243:         LATE1=0;
  1421  000824  928D               	bcf	3981,1,c	;volatile
  1422                           
  1423                           ;source_headers/main.c: 244:         LATC2=0;
  1424  000826  948B               	bcf	3979,2,c	;volatile
  1425                           
  1426                           ;source_headers/main.c: 245:         LATE2=0;
  1427  000828  948D               	bcf	3981,2,c	;volatile
  1428  00082A                     l1381:
  1429                           
  1430                           ;source_headers/main.c: 247:     latcde_update_complete();
  1431  00082A  EC33  F004         	call	_latcde_update_complete	;wreg free
  1432  00082E  0012               	return		;funcret
  1433  000830                     __end_of_UpdateLeds:
  1434                           	callstack 0
  1435                           
  1436 ;; *************** function _latcde_update_complete *****************
  1437 ;; Defined at:
  1438 ;;		line 9 in file "source_headers/breakpoints.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		None
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;Total ram usage:        0 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    2
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_UpdateLeds
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text11
  1467  000866                     __ptext11:
  1468                           	callstack 0
  1469  000866                     _latcde_update_complete:
  1470                           	callstack 27
  1471  000866  0012               	return		;funcret
  1472  000868                     __end_of_latcde_update_complete:
  1473                           	callstack 0
  1474                           
  1475 ;; *************** function _Update7Segment *****************
  1476 ;; Defined at:
  1477 ;;		line 163 in file "source_headers/main.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  value_to_dis    2    2[COMRAM] int 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		wreg, status,2, status,0, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1491 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;Total ram usage:        4 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    3
  1498 ;; This function calls:
  1499 ;;		_latjh_update_complete
  1500 ;; This function is called by:
  1501 ;;		_EndGame
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text12
  1507  0004E4                     __ptext12:
  1508                           	callstack 0
  1509  0004E4                     _Update7Segment:
  1510                           	callstack 27
  1511  0004E4                     
  1512                           ;source_headers/main.c: 165:     LATH3=1;
  1513  0004E4  8690               	bsf	3984,3,c	;volatile
  1514                           
  1515                           ;source_headers/main.c: 166:     switch (value_to_display){
  1516  0004E6  EFA1  F002         	goto	l1359
  1517  0004EA                     l1333:
  1518                           
  1519                           ;source_headers/main.c: 168:             LATJ = 0;
  1520  0004EA  0E00               	movlw	0
  1521  0004EC  6E91               	movwf	145,c	;volatile
  1522                           
  1523                           ;source_headers/main.c: 169:             break;
  1524  0004EE  EFE2  F002         	goto	l1361
  1525  0004F2                     l1335:
  1526                           
  1527                           ;source_headers/main.c: 171:             LATJ = 63;
  1528  0004F2  0E3F               	movlw	63
  1529  0004F4  6E91               	movwf	145,c	;volatile
  1530                           
  1531                           ;source_headers/main.c: 172:             break;
  1532  0004F6  EFE2  F002         	goto	l1361
  1533  0004FA                     l1337:
  1534                           
  1535                           ;source_headers/main.c: 174:             LATJ = 6;
  1536  0004FA  0E06               	movlw	6
  1537  0004FC  6E91               	movwf	145,c	;volatile
  1538                           
  1539                           ;source_headers/main.c: 175:             break;
  1540  0004FE  EFE2  F002         	goto	l1361
  1541  000502                     l1339:
  1542                           
  1543                           ;source_headers/main.c: 177:             LATJ = 91;
  1544  000502  0E5B               	movlw	91
  1545  000504  6E91               	movwf	145,c	;volatile
  1546                           
  1547                           ;source_headers/main.c: 178:             break;
  1548  000506  EFE2  F002         	goto	l1361
  1549  00050A                     l1341:
  1550                           
  1551                           ;source_headers/main.c: 180:             LATJ = 79;
  1552  00050A  0E4F               	movlw	79
  1553  00050C  6E91               	movwf	145,c	;volatile
  1554                           
  1555                           ;source_headers/main.c: 181:             break;
  1556  00050E  EFE2  F002         	goto	l1361
  1557  000512                     l1343:
  1558                           
  1559                           ;source_headers/main.c: 183:             LATJ = 102;
  1560  000512  0E66               	movlw	102
  1561  000514  6E91               	movwf	145,c	;volatile
  1562                           
  1563                           ;source_headers/main.c: 184:             break;
  1564  000516  EFE2  F002         	goto	l1361
  1565  00051A                     l1345:
  1566                           
  1567                           ;source_headers/main.c: 186:             LATJ = 109;
  1568  00051A  0E6D               	movlw	109
  1569  00051C  6E91               	movwf	145,c	;volatile
  1570                           
  1571                           ;source_headers/main.c: 187:             break;
  1572  00051E  EFE2  F002         	goto	l1361
  1573  000522                     l1347:
  1574                           
  1575                           ;source_headers/main.c: 189:             LATJ = 125;
  1576  000522  0E7D               	movlw	125
  1577  000524  6E91               	movwf	145,c	;volatile
  1578                           
  1579                           ;source_headers/main.c: 190:             break;
  1580  000526  EFE2  F002         	goto	l1361
  1581  00052A                     l1349:
  1582                           
  1583                           ;source_headers/main.c: 192:             LATJ = 7;
  1584  00052A  0E07               	movlw	7
  1585  00052C  6E91               	movwf	145,c	;volatile
  1586                           
  1587                           ;source_headers/main.c: 193:             break;
  1588  00052E  EFE2  F002         	goto	l1361
  1589  000532                     l1351:
  1590                           
  1591                           ;source_headers/main.c: 195:             LATJ = 127;
  1592  000532  0E7F               	movlw	127
  1593  000534  6E91               	movwf	145,c	;volatile
  1594                           
  1595                           ;source_headers/main.c: 196:             break;
  1596  000536  EFE2  F002         	goto	l1361
  1597  00053A                     l1353:
  1598                           
  1599                           ;source_headers/main.c: 198:             LATJ = 111;
  1600  00053A  0E6F               	movlw	111
  1601  00053C  6E91               	movwf	145,c	;volatile
  1602                           
  1603                           ;source_headers/main.c: 199:             break;
  1604  00053E  EFE2  F002         	goto	l1361
  1605  000542                     l1359:
  1606  000542  C015  F017         	movff	Update7Segment@value_to_display,??_Update7Segment
  1607  000546  C016  F018         	movff	Update7Segment@value_to_display+1,??_Update7Segment+1
  1608                           
  1609                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1610                           ; Switch size 1, requested type "simple"
  1611                           ; Number of cases is 2, Range of values is 0 to 255
  1612                           ; switch strategies available:
  1613                           ; Name         Instructions Cycles
  1614                           ; simple_byte            7     4 (average)
  1615                           ;	Chosen strategy is simple_byte
  1616  00054A  5018               	movf	(??_Update7Segment+1)^0,w,c
  1617  00054C  0A00               	xorlw	0	; case 0
  1618  00054E  B4D8               	btfsc	status,2,c
  1619  000550  EFB0  F002         	goto	l1609
  1620  000554  0AFF               	xorlw	255	; case 255
  1621  000556  B4D8               	btfsc	status,2,c
  1622  000558  EFDB  F002         	goto	l1611
  1623  00055C  EF75  F002         	goto	l1333
  1624  000560                     l1609:
  1625                           
  1626                           ; Switch size 1, requested type "simple"
  1627                           ; Number of cases is 10, Range of values is 0 to 9
  1628                           ; switch strategies available:
  1629                           ; Name         Instructions Cycles
  1630                           ; simple_byte           31    16 (average)
  1631                           ;	Chosen strategy is simple_byte
  1632  000560  5017               	movf	??_Update7Segment^0,w,c
  1633  000562  0A00               	xorlw	0	; case 0
  1634  000564  B4D8               	btfsc	status,2,c
  1635  000566  EF79  F002         	goto	l1335
  1636  00056A  0A01               	xorlw	1	; case 1
  1637  00056C  B4D8               	btfsc	status,2,c
  1638  00056E  EF7D  F002         	goto	l1337
  1639  000572  0A03               	xorlw	3	; case 2
  1640  000574  B4D8               	btfsc	status,2,c
  1641  000576  EF81  F002         	goto	l1339
  1642  00057A  0A01               	xorlw	1	; case 3
  1643  00057C  B4D8               	btfsc	status,2,c
  1644  00057E  EF85  F002         	goto	l1341
  1645  000582  0A07               	xorlw	7	; case 4
  1646  000584  B4D8               	btfsc	status,2,c
  1647  000586  EF89  F002         	goto	l1343
  1648  00058A  0A01               	xorlw	1	; case 5
  1649  00058C  B4D8               	btfsc	status,2,c
  1650  00058E  EF8D  F002         	goto	l1345
  1651  000592  0A03               	xorlw	3	; case 6
  1652  000594  B4D8               	btfsc	status,2,c
  1653  000596  EF91  F002         	goto	l1347
  1654  00059A  0A01               	xorlw	1	; case 7
  1655  00059C  B4D8               	btfsc	status,2,c
  1656  00059E  EF95  F002         	goto	l1349
  1657  0005A2  0A0F               	xorlw	15	; case 8
  1658  0005A4  B4D8               	btfsc	status,2,c
  1659  0005A6  EF99  F002         	goto	l1351
  1660  0005AA  0A01               	xorlw	1	; case 9
  1661  0005AC  B4D8               	btfsc	status,2,c
  1662  0005AE  EF9D  F002         	goto	l1353
  1663  0005B2  EF75  F002         	goto	l1333
  1664  0005B6                     l1611:
  1665                           
  1666                           ; Switch size 1, requested type "simple"
  1667                           ; Number of cases is 1, Range of values is 255 to 255
  1668                           ; switch strategies available:
  1669                           ; Name         Instructions Cycles
  1670                           ; simple_byte            4     3 (average)
  1671                           ;	Chosen strategy is simple_byte
  1672  0005B6  5017               	movf	??_Update7Segment^0,w,c
  1673  0005B8  0AFF               	xorlw	255	; case 255
  1674  0005BA  B4D8               	btfsc	status,2,c
  1675  0005BC  EF75  F002         	goto	l1333
  1676  0005C0  EF75  F002         	goto	l1333
  1677  0005C4                     l1361:
  1678                           
  1679                           ;source_headers/main.c: 204:     latjh_update_complete();
  1680  0005C4  EC34  F004         	call	_latjh_update_complete	;wreg free
  1681  0005C8                     
  1682                           ;source_headers/main.c: 205:     LATH3 = 0;
  1683  0005C8  9690               	bcf	3984,3,c	;volatile
  1684  0005CA  0012               	return		;funcret
  1685  0005CC                     __end_of_Update7Segment:
  1686                           	callstack 0
  1687                           
  1688 ;; *************** function _latjh_update_complete *****************
  1689 ;; Defined at:
  1690 ;;		line 8 in file "source_headers/breakpoints.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;		None
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		None
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;Total ram usage:        0 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    2
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_Update7Segment
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text13
  1719  000868                     __ptext13:
  1720                           	callstack 0
  1721  000868                     _latjh_update_complete:
  1722                           	callstack 27
  1723  000868  0012               	return		;funcret
  1724  00086A                     __end_of_latjh_update_complete:
  1725                           	callstack 0
  1726                           
  1727 ;; *************** function _Init *****************
  1728 ;; Defined at:
  1729 ;;		line 122 in file "source_headers/main.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;		None
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;		None
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;Total ram usage:        0 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    3
  1750 ;; This function calls:
  1751 ;;		_init_complete
  1752 ;; This function is called by:
  1753 ;;		_EndGame
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text14
  1759  00075A                     __ptext14:
  1760                           	callstack 0
  1761  00075A                     _Init:
  1762                           	callstack 27
  1763  00075A                     
  1764                           ;source_headers/main.c: 124:     INTCON = 0;
  1765  00075A  0E00               	movlw	0
  1766  00075C  6EF2               	movwf	242,c	;volatile
  1767                           
  1768                           ;source_headers/main.c: 126:     TMR0 = 0;
  1769  00075E  0E00               	movlw	0
  1770  000760  6ED7               	movwf	215,c	;volatile
  1771  000762  0E00               	movlw	0
  1772  000764  6ED6               	movwf	214,c	;volatile
  1773                           
  1774                           ;source_headers/main.c: 127:     T0CON = 0b11010111;
  1775  000766  0ED7               	movlw	215
  1776  000768  6ED5               	movwf	213,c	;volatile
  1777                           
  1778                           ;source_headers/main.c: 128:     TMR0L = 61;
  1779  00076A  0E3D               	movlw	61
  1780  00076C  6ED6               	movwf	214,c	;volatile
  1781                           
  1782                           ;source_headers/main.c: 130:     timer0_counter = 10;
  1783  00076E  0E00               	movlw	0
  1784  000770  6E26               	movwf	(_timer0_counter+1)^0,c
  1785  000772  0E0A               	movlw	10
  1786  000774  6E25               	movwf	_timer0_counter^0,c
  1787  000776                     
  1788                           ;source_headers/main.c: 131:     TMR0IE = 1;
  1789  000776  8AF2               	bsf	4082,5,c	;volatile
  1790                           
  1791                           ;source_headers/main.c: 134:     TMR1 = 0;
  1792  000778  0E00               	movlw	0
  1793  00077A  6ECF               	movwf	207,c	;volatile
  1794  00077C  0E00               	movlw	0
  1795  00077E  6ECE               	movwf	206,c	;volatile
  1796                           
  1797                           ;source_headers/main.c: 135:     T1CON = 0b11110001;
  1798  000780  0EF1               	movlw	241
  1799  000782  6ECD               	movwf	205,c	;volatile
  1800                           
  1801                           ;source_headers/main.c: 136:     TMR1 = 3036;
  1802  000784  0E0B               	movlw	11
  1803  000786  6ECF               	movwf	207,c	;volatile
  1804  000788  0EDC               	movlw	220
  1805  00078A  6ECE               	movwf	206,c	;volatile
  1806                           
  1807                           ;source_headers/main.c: 137:     timer1_counter = 10;
  1808  00078C  0E00               	movlw	0
  1809  00078E  6E24               	movwf	(_timer1_counter+1)^0,c
  1810  000790  0E0A               	movlw	10
  1811  000792  6E23               	movwf	_timer1_counter^0,c
  1812  000794                     
  1813                           ;source_headers/main.c: 138:     TMR1IE = 1;
  1814  000794  809D               	bsf	3997,0,c	;volatile
  1815                           
  1816                           ;source_headers/main.c: 139:     end_game_counter = 10;
  1817  000796  0E00               	movlw	0
  1818  000798  6E22               	movwf	(_end_game_counter+1)^0,c
  1819  00079A  0E0A               	movlw	10
  1820  00079C  6E21               	movwf	_end_game_counter^0,c
  1821                           
  1822                           ;source_headers/main.c: 141:     TRISH = 0b00010000;
  1823  00079E  0E10               	movlw	16
  1824  0007A0  6E99               	movwf	153,c	;volatile
  1825                           
  1826                           ;source_headers/main.c: 142:     ADCON0 = 0x30;
  1827  0007A2  0E30               	movlw	48
  1828  0007A4  6EC2               	movwf	194,c	;volatile
  1829                           
  1830                           ;source_headers/main.c: 143:     ADCON1 = 0;
  1831  0007A6  0E00               	movlw	0
  1832  0007A8  6EC1               	movwf	193,c	;volatile
  1833                           
  1834                           ;source_headers/main.c: 144:     ADCON2 = 0xAA;
  1835  0007AA  0EAA               	movlw	170
  1836  0007AC  6EC0               	movwf	192,c	;volatile
  1837  0007AE                     
  1838                           ;source_headers/main.c: 146:     ADON=1;
  1839  0007AE  80C2               	bsf	4034,0,c	;volatile
  1840                           
  1841                           ;source_headers/main.c: 149:     TRISJ = 0;
  1842  0007B0  0E00               	movlw	0
  1843  0007B2  6E9A               	movwf	154,c	;volatile
  1844                           
  1845                           ;source_headers/main.c: 150:     TRISC = 0;
  1846  0007B4  0E00               	movlw	0
  1847  0007B6  6E94               	movwf	148,c	;volatile
  1848                           
  1849                           ;source_headers/main.c: 151:     TRISD = 0;
  1850  0007B8  0E00               	movlw	0
  1851  0007BA  6E95               	movwf	149,c	;volatile
  1852                           
  1853                           ;source_headers/main.c: 152:     TRISE = 0;
  1854  0007BC  0E00               	movlw	0
  1855  0007BE  6E96               	movwf	150,c	;volatile
  1856  0007C0                     
  1857                           ;source_headers/main.c: 153:     TRISB = 0b11111111;
  1858  0007C0  6893               	setf	147,c	;volatile
  1859  0007C2                     
  1860                           ;source_headers/main.c: 154:     RBIE = 1;
  1861  0007C2  86F2               	bsf	4082,3,c	;volatile
  1862  0007C4                     
  1863                           ;source_headers/main.c: 157:     GIE = 1;
  1864  0007C4  8EF2               	bsf	4082,7,c	;volatile
  1865  0007C6                     
  1866                           ;source_headers/main.c: 158:     PEIE = 1;
  1867  0007C6  8CF2               	bsf	4082,6,c	;volatile
  1868  0007C8                     
  1869                           ;source_headers/main.c: 160:     init_complete();
  1870  0007C8  EC35  F004         	call	_init_complete	;wreg free
  1871  0007CC  0012               	return		;funcret
  1872  0007CE                     __end_of_Init:
  1873                           	callstack 0
  1874                           
  1875 ;; *************** function _init_complete *****************
  1876 ;; Defined at:
  1877 ;;		line 5 in file "source_headers/breakpoints.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;		None
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		None
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;Total ram usage:        0 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:    2
  1898 ;; This function calls:
  1899 ;;		Nothing
  1900 ;; This function is called by:
  1901 ;;		_Init
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text15
  1906  00086A                     __ptext15:
  1907                           	callstack 0
  1908  00086A                     _init_complete:
  1909                           	callstack 27
  1910  00086A  0012               	return		;funcret
  1911  00086C                     __end_of_init_complete:
  1912                           	callstack 0
  1913                           
  1914 ;; *************** function _ISR *****************
  1915 ;; Defined at:
  1916 ;;		line 44 in file "source_headers/main.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;		None
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;		None
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;Total ram usage:        2 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    1
  1937 ;; This function calls:
  1938 ;;		_hs_passed
  1939 ;; This function is called by:
  1940 ;;		Interrupt level 2
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	intcode
  1945  000008                     __pintcode:
  1946                           	callstack 0
  1947  000008                     _ISR:
  1948                           	callstack 26
  1949                           
  1950                           ;incstack = 0
  1951  000008  8228               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1952  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
  1953                           
  1954                           	psect	intcode_body
  1955  000012                     __pintcode_body:
  1956                           	callstack 26
  1957  000012                     int_func:
  1958                           	callstack 26
  1959  000012  0006               	pop		; remove dummy address from shadow register refresh
  1960  000014                     
  1961                           ;source_headers/main.c: 47:     if(ADIF == 1) {
  1962  000014  AC9E               	btfss	3998,6,c	;volatile
  1963  000016  EF0F  F000         	goto	i2u23_41
  1964  00001A  EF11  F000         	goto	i2u23_40
  1965  00001E                     i2u23_41:
  1966  00001E  EF16  F000         	goto	i2l1181
  1967  000022                     i2u23_40:
  1968  000022                     
  1969                           ;source_headers/main.c: 49:         adcon_flag = 1 ;
  1970  000022  0E00               	movlw	0
  1971  000024  6E0C               	movwf	(_adcon_flag+1)^0,c
  1972  000026  0E01               	movlw	1
  1973  000028  6E0B               	movwf	_adcon_flag^0,c
  1974  00002A                     
  1975                           ;source_headers/main.c: 50:         ADIF = 0 ;
  1976  00002A  9C9E               	bcf	3998,6,c	;volatile
  1977  00002C                     i2l1181:
  1978                           
  1979                           ;source_headers/main.c: 52:     if(TMR0IF == 1){
  1980  00002C  A4F2               	btfss	4082,2,c	;volatile
  1981  00002E  EF1B  F000         	goto	i2u24_41
  1982  000032  EF1D  F000         	goto	i2u24_40
  1983  000036                     i2u24_41:
  1984  000036  EF73  F000         	goto	i2l1205
  1985  00003A                     i2u24_40:
  1986  00003A  EF42  F000         	goto	i2l1195
  1987  00003E                     i2l1185:
  1988                           
  1989                           ;source_headers/main.c: 56:                 if (previous_state == 1){
  1990  00003E  0401               	decf	_previous_state^0,w,c
  1991  000040  1002               	iorwf	(_previous_state+1)^0,w,c
  1992  000042  A4D8               	btfss	status,2,c
  1993  000044  EF26  F000         	goto	i2u25_41
  1994  000048  EF28  F000         	goto	i2u25_40
  1995  00004C                     i2u25_41:
  1996  00004C  EF58  F000         	goto	i2l192
  1997  000050                     i2u25_40:
  1998  000050                     
  1999                           ;source_headers/main.c: 57:                     state = 2;
  2000  000050  0E00               	movlw	0
  2001  000052  6E04               	movwf	(_state+1)^0,c
  2002  000054  0E02               	movlw	2
  2003  000056  6E03               	movwf	_state^0,c
  2004                           
  2005                           ;source_headers/main.c: 58:                     rb_flag = 1;
  2006  000058  0E00               	movlw	0
  2007  00005A  6E0A               	movwf	(_rb_flag+1)^0,c
  2008  00005C  0E01               	movlw	1
  2009  00005E  6E09               	movwf	_rb_flag^0,c
  2010  000060  EF58  F000         	goto	i2l192
  2011  000064                     i2l1189:
  2012                           
  2013                           ;source_headers/main.c: 62:                 if (previous_state == 3)
  2014  000064  0E03               	movlw	3
  2015  000066  1801               	xorwf	_previous_state^0,w,c
  2016  000068  1002               	iorwf	(_previous_state+1)^0,w,c
  2017  00006A  A4D8               	btfss	status,2,c
  2018  00006C  EF3A  F000         	goto	i2u26_41
  2019  000070  EF3C  F000         	goto	i2u26_40
  2020  000074                     i2u26_41:
  2021  000074  EF58  F000         	goto	i2l192
  2022  000078                     i2u26_40:
  2023  000078                     
  2024                           ;source_headers/main.c: 63:                     state = 0;
  2025  000078  0E00               	movlw	0
  2026  00007A  6E04               	movwf	(_state+1)^0,c
  2027  00007C  0E00               	movlw	0
  2028  00007E  6E03               	movwf	_state^0,c
  2029  000080  EF58  F000         	goto	i2l192
  2030  000084                     i2l1195:
  2031  000084  C003  F013         	movff	_state,??_ISR
  2032  000088  C004  F014         	movff	_state+1,??_ISR+1
  2033                           
  2034                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2035                           ; Switch size 1, requested type "simple"
  2036                           ; Number of cases is 1, Range of values is 0 to 0
  2037                           ; switch strategies available:
  2038                           ; Name         Instructions Cycles
  2039                           ; simple_byte            4     3 (average)
  2040                           ;	Chosen strategy is simple_byte
  2041  00008C  5014               	movf	(??_ISR+1)^0,w,c
  2042  00008E  0A00               	xorlw	0	; case 0
  2043  000090  B4D8               	btfsc	status,2,c
  2044  000092  EF4D  F000         	goto	i2l1613
  2045  000096  EF58  F000         	goto	i2l192
  2046  00009A                     i2l1613:
  2047                           
  2048                           ; Switch size 1, requested type "simple"
  2049                           ; Number of cases is 2, Range of values is 1 to 3
  2050                           ; switch strategies available:
  2051                           ; Name         Instructions Cycles
  2052                           ; simple_byte            7     4 (average)
  2053                           ;	Chosen strategy is simple_byte
  2054  00009A  5013               	movf	??_ISR^0,w,c
  2055  00009C  0A01               	xorlw	1	; case 1
  2056  00009E  B4D8               	btfsc	status,2,c
  2057  0000A0  EF1F  F000         	goto	i2l1185
  2058  0000A4  0A02               	xorlw	2	; case 3
  2059  0000A6  B4D8               	btfsc	status,2,c
  2060  0000A8  EF32  F000         	goto	i2l1189
  2061  0000AC  EF58  F000         	goto	i2l192
  2062  0000B0                     i2l192:
  2063                           
  2064                           ;source_headers/main.c: 68:         previous_state = state;
  2065  0000B0  C003  F001         	movff	_state,_previous_state
  2066  0000B4  C004  F002         	movff	_state+1,_previous_state+1
  2067  0000B8                     
  2068                           ;source_headers/main.c: 70:         timer0_counter--;
  2069  0000B8  0625               	decf	_timer0_counter^0,f,c
  2070  0000BA  A0D8               	btfss	status,0,c
  2071  0000BC  0626               	decf	(_timer0_counter+1)^0,f,c
  2072  0000BE                     
  2073                           ;source_headers/main.c: 71:         if(timer0_counter == 0){
  2074  0000BE  5025               	movf	_timer0_counter^0,w,c
  2075  0000C0  1026               	iorwf	(_timer0_counter+1)^0,w,c
  2076  0000C2  A4D8               	btfss	status,2,c
  2077  0000C4  EF66  F000         	goto	i2u27_41
  2078  0000C8  EF68  F000         	goto	i2u27_40
  2079  0000CC                     i2u27_41:
  2080  0000CC  EF70  F000         	goto	i2l196
  2081  0000D0                     i2u27_40:
  2082  0000D0                     
  2083                           ;source_headers/main.c: 72:             timer0_flag = 1;
  2084  0000D0  0E00               	movlw	0
  2085  0000D2  6E10               	movwf	(_timer0_flag+1)^0,c
  2086  0000D4  0E01               	movlw	1
  2087  0000D6  6E0F               	movwf	_timer0_flag^0,c
  2088                           
  2089                           ;source_headers/main.c: 73:             timer0_counter = 10;
  2090  0000D8  0E00               	movlw	0
  2091  0000DA  6E26               	movwf	(_timer0_counter+1)^0,c
  2092  0000DC  0E0A               	movlw	10
  2093  0000DE  6E25               	movwf	_timer0_counter^0,c
  2094  0000E0                     i2l196:
  2095                           
  2096                           ;source_headers/main.c: 75:         TMR0L = 61;
  2097  0000E0  0E3D               	movlw	61
  2098  0000E2  6ED6               	movwf	214,c	;volatile
  2099  0000E4                     
  2100                           ;source_headers/main.c: 76:         TMR0IF = 0;
  2101  0000E4  94F2               	bcf	4082,2,c	;volatile
  2102  0000E6                     i2l1205:
  2103                           
  2104                           ;source_headers/main.c: 78:     if(TMR1IF == 1){
  2105  0000E6  A09E               	btfss	3998,0,c	;volatile
  2106  0000E8  EF78  F000         	goto	i2u28_41
  2107  0000EC  EF7A  F000         	goto	i2u28_40
  2108  0000F0                     i2u28_41:
  2109  0000F0  EF95  F000         	goto	i2l1221
  2110  0000F4                     i2u28_40:
  2111  0000F4                     
  2112                           ;source_headers/main.c: 80:         timer1_counter--;
  2113  0000F4  0623               	decf	_timer1_counter^0,f,c
  2114  0000F6  A0D8               	btfss	status,0,c
  2115  0000F8  0624               	decf	(_timer1_counter+1)^0,f,c
  2116  0000FA                     
  2117                           ;source_headers/main.c: 81:         if(timer1_counter == 0){
  2118  0000FA  5023               	movf	_timer1_counter^0,w,c
  2119  0000FC  1024               	iorwf	(_timer1_counter+1)^0,w,c
  2120  0000FE  A4D8               	btfss	status,2,c
  2121  000100  EF84  F000         	goto	i2u29_41
  2122  000104  EF86  F000         	goto	i2u29_40
  2123  000108                     i2u29_41:
  2124  000108  EF90  F000         	goto	i2l1217
  2125  00010C                     i2u29_40:
  2126  00010C                     
  2127                           ;source_headers/main.c: 82:             hs_passed();
  2128  00010C  EC36  F004         	call	_hs_passed	;wreg free
  2129  000110                     
  2130                           ;source_headers/main.c: 83:             half_sec_flag = 1;
  2131  000110  0E00               	movlw	0
  2132  000112  6E0E               	movwf	(_half_sec_flag+1)^0,c
  2133  000114  0E01               	movlw	1
  2134  000116  6E0D               	movwf	_half_sec_flag^0,c
  2135  000118                     
  2136                           ;source_headers/main.c: 84:             timer1_counter = 10;
  2137  000118  0E00               	movlw	0
  2138  00011A  6E24               	movwf	(_timer1_counter+1)^0,c
  2139  00011C  0E0A               	movlw	10
  2140  00011E  6E23               	movwf	_timer1_counter^0,c
  2141  000120                     i2l1217:
  2142                           
  2143                           ;source_headers/main.c: 86:         TMR1 = 3036;
  2144  000120  0E0B               	movlw	11
  2145  000122  6ECF               	movwf	207,c	;volatile
  2146  000124  0EDC               	movlw	220
  2147  000126  6ECE               	movwf	206,c	;volatile
  2148  000128                     
  2149                           ;source_headers/main.c: 87:         TMR1IF = 0;
  2150  000128  909E               	bcf	3998,0,c	;volatile
  2151  00012A                     i2l1221:
  2152                           
  2153                           ;source_headers/main.c: 89:     if(RBIF == 1){
  2154  00012A  A0F2               	btfss	4082,0,c	;volatile
  2155  00012C  EF9A  F000         	goto	i2u30_41
  2156  000130  EF9C  F000         	goto	i2u30_40
  2157  000134                     i2u30_41:
  2158  000134  EFEB  F000         	goto	i2l212
  2159  000138                     i2u30_40:
  2160  000138                     
  2161                           ;source_headers/main.c: 91:         if(PORTBbits.RB4 == 0)
  2162  000138  B881               	btfsc	129,4,c	;volatile
  2163  00013A  EFA1  F000         	goto	i2u31_41
  2164  00013E  EFA3  F000         	goto	i2u31_40
  2165  000142                     i2u31_41:
  2166  000142  EFD3  F000         	goto	i2l1241
  2167  000146                     i2u31_40:
  2168  000146  EFB1  F000         	goto	i2l1233
  2169  00014A                     i2l1227:
  2170                           
  2171                           ;source_headers/main.c: 95:                     state = 0;
  2172  00014A  0E00               	movlw	0
  2173  00014C  6E04               	movwf	(_state+1)^0,c
  2174  00014E  0E00               	movlw	0
  2175  000150  6E03               	movwf	_state^0,c
  2176                           
  2177                           ;source_headers/main.c: 96:                     break;
  2178  000152  EFE9  F000         	goto	i2l1243
  2179  000156                     i2l1229:
  2180                           
  2181                           ;source_headers/main.c: 98:                     state = 3;
  2182  000156  0E00               	movlw	0
  2183  000158  6E04               	movwf	(_state+1)^0,c
  2184  00015A  0E03               	movlw	3
  2185  00015C  6E03               	movwf	_state^0,c
  2186                           
  2187                           ;source_headers/main.c: 99:                     break;
  2188  00015E  EFE9  F000         	goto	i2l1243
  2189  000162                     i2l1233:
  2190  000162  C003  F013         	movff	_state,??_ISR
  2191  000166  C004  F014         	movff	_state+1,??_ISR+1
  2192                           
  2193                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2194                           ; Switch size 1, requested type "simple"
  2195                           ; Number of cases is 1, Range of values is 0 to 0
  2196                           ; switch strategies available:
  2197                           ; Name         Instructions Cycles
  2198                           ; simple_byte            4     3 (average)
  2199                           ;	Chosen strategy is simple_byte
  2200  00016A  5014               	movf	(??_ISR+1)^0,w,c
  2201  00016C  0A00               	xorlw	0	; case 0
  2202  00016E  B4D8               	btfsc	status,2,c
  2203  000170  EFBC  F000         	goto	i2l1615
  2204  000174  EFE9  F000         	goto	i2l1243
  2205  000178                     i2l1615:
  2206                           
  2207                           ; Switch size 1, requested type "simple"
  2208                           ; Number of cases is 2, Range of values is 1 to 2
  2209                           ; switch strategies available:
  2210                           ; Name         Instructions Cycles
  2211                           ; simple_byte            7     4 (average)
  2212                           ;	Chosen strategy is simple_byte
  2213  000178  5013               	movf	??_ISR^0,w,c
  2214  00017A  0A01               	xorlw	1	; case 1
  2215  00017C  B4D8               	btfsc	status,2,c
  2216  00017E  EFA5  F000         	goto	i2l1227
  2217  000182  0A03               	xorlw	3	; case 2
  2218  000184  B4D8               	btfsc	status,2,c
  2219  000186  EFAB  F000         	goto	i2l1229
  2220  00018A  EFE9  F000         	goto	i2l1243
  2221  00018E                     i2l1235:
  2222                           
  2223                           ;source_headers/main.c: 108:                     state = 1;
  2224  00018E  0E00               	movlw	0
  2225  000190  6E04               	movwf	(_state+1)^0,c
  2226  000192  0E01               	movlw	1
  2227  000194  6E03               	movwf	_state^0,c
  2228                           
  2229                           ;source_headers/main.c: 109:                     break;
  2230  000196  EFE9  F000         	goto	i2l1243
  2231  00019A                     i2l1237:
  2232                           
  2233                           ;source_headers/main.c: 111:                     state = 2;
  2234  00019A  0E00               	movlw	0
  2235  00019C  6E04               	movwf	(_state+1)^0,c
  2236  00019E  0E02               	movlw	2
  2237  0001A0  6E03               	movwf	_state^0,c
  2238                           
  2239                           ;source_headers/main.c: 112:                     break;
  2240  0001A2  EFE9  F000         	goto	i2l1243
  2241  0001A6                     i2l1241:
  2242  0001A6  C003  F013         	movff	_state,??_ISR
  2243  0001AA  C004  F014         	movff	_state+1,??_ISR+1
  2244                           
  2245                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2246                           ; Switch size 1, requested type "simple"
  2247                           ; Number of cases is 1, Range of values is 0 to 0
  2248                           ; switch strategies available:
  2249                           ; Name         Instructions Cycles
  2250                           ; simple_byte            4     3 (average)
  2251                           ;	Chosen strategy is simple_byte
  2252  0001AE  5014               	movf	(??_ISR+1)^0,w,c
  2253  0001B0  0A00               	xorlw	0	; case 0
  2254  0001B2  B4D8               	btfsc	status,2,c
  2255  0001B4  EFDE  F000         	goto	i2l1617
  2256  0001B8  EFE9  F000         	goto	i2l1243
  2257  0001BC                     i2l1617:
  2258                           
  2259                           ; Switch size 1, requested type "simple"
  2260                           ; Number of cases is 2, Range of values is 0 to 3
  2261                           ; switch strategies available:
  2262                           ; Name         Instructions Cycles
  2263                           ; simple_byte            7     4 (average)
  2264                           ;	Chosen strategy is simple_byte
  2265  0001BC  5013               	movf	??_ISR^0,w,c
  2266  0001BE  0A00               	xorlw	0	; case 0
  2267  0001C0  B4D8               	btfsc	status,2,c
  2268  0001C2  EFC7  F000         	goto	i2l1235
  2269  0001C6  0A03               	xorlw	3	; case 3
  2270  0001C8  B4D8               	btfsc	status,2,c
  2271  0001CA  EFCD  F000         	goto	i2l1237
  2272  0001CE  EFE9  F000         	goto	i2l1243
  2273  0001D2                     i2l1243:
  2274                           
  2275                           ;source_headers/main.c: 117:         PORTB;
  2276  0001D2  5081               	movf	129,w,c	;volatile
  2277  0001D4                     
  2278                           ;source_headers/main.c: 118:         RBIF = 0;
  2279  0001D4  90F2               	bcf	4082,0,c	;volatile
  2280  0001D6                     i2l212:
  2281  0001D6  9228               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2282  0001D8  0011               	retfie		f
  2283  0001DA                     __end_of_ISR:
  2284                           	callstack 0
  2285                           
  2286 ;; *************** function _hs_passed *****************
  2287 ;; Defined at:
  2288 ;;		line 11 in file "source_headers/breakpoints.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		None
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;Total ram usage:        0 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; This function calls:
  2309 ;;		Nothing
  2310 ;; This function is called by:
  2311 ;;		_ISR
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text17
  2316  00086C                     __ptext17:
  2317                           	callstack 0
  2318  00086C                     _hs_passed:
  2319                           	callstack 26
  2320  00086C  0012               	return		;funcret
  2321  00086E                     __end_of_hs_passed:
  2322                           	callstack 0
  2323  0000                     
  2324                           	psect	rparam
  2325  0000                     
  2326                           	psect	temp
  2327  000028                     btemp:
  2328                           	callstack 0
  2329  000028                     	ds	1
  2330  0000                     int$flags	set	btemp
  2331  0000                     wtemp8	set	btemp+1
  2332  0000                     ttemp5	set	btemp+1
  2333  0000                     ttemp6	set	btemp+4
  2334  0000                     ttemp7	set	btemp+8
  2335                           
  2336                           	psect	idloc
  2337                           
  2338                           ;Config register IDLOC0 @ 0x200000
  2339                           ;	unspecified, using default values
  2340  200000                     	org	2097152
  2341  200000  FF                 	db	255
  2342                           
  2343                           ;Config register IDLOC1 @ 0x200001
  2344                           ;	unspecified, using default values
  2345  200001                     	org	2097153
  2346  200001  FF                 	db	255
  2347                           
  2348                           ;Config register IDLOC2 @ 0x200002
  2349                           ;	unspecified, using default values
  2350  200002                     	org	2097154
  2351  200002  FF                 	db	255
  2352                           
  2353                           ;Config register IDLOC3 @ 0x200003
  2354                           ;	unspecified, using default values
  2355  200003                     	org	2097155
  2356  200003  FF                 	db	255
  2357                           
  2358                           ;Config register IDLOC4 @ 0x200004
  2359                           ;	unspecified, using default values
  2360  200004                     	org	2097156
  2361  200004  FF                 	db	255
  2362                           
  2363                           ;Config register IDLOC5 @ 0x200005
  2364                           ;	unspecified, using default values
  2365  200005                     	org	2097157
  2366  200005  FF                 	db	255
  2367                           
  2368                           ;Config register IDLOC6 @ 0x200006
  2369                           ;	unspecified, using default values
  2370  200006                     	org	2097158
  2371  200006  FF                 	db	255
  2372                           
  2373                           ;Config register IDLOC7 @ 0x200007
  2374                           ;	unspecified, using default values
  2375  200007                     	org	2097159
  2376  200007  FF                 	db	255
  2377                           
  2378                           	psect	config
  2379                           
  2380                           ; Padding undefined space
  2381  300000                     	org	3145728
  2382  300000  FF                 	db	255
  2383                           
  2384                           ;Config register CONFIG1H @ 0x300001
  2385                           ;	Oscillator Selection bits
  2386                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  2387                           ;	Fail-Safe Clock Monitor Enable bit
  2388                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2389                           ;	Internal/External Oscillator Switchover bit
  2390                           ;	IESO = OFF, Two-Speed Start-up disabled
  2391  300001                     	org	3145729
  2392  300001  06                 	db	6
  2393                           
  2394                           ;Config register CONFIG2L @ 0x300002
  2395                           ;	Power-up Timer Enable bit
  2396                           ;	PWRT = OFF, PWRT disabled
  2397                           ;	Brown-out Reset Enable bits
  2398                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2399                           ;	Brown-out Voltage bits
  2400                           ;	BORV = 0x3, unprogrammed default
  2401  300002                     	org	3145730
  2402  300002  19                 	db	25
  2403                           
  2404                           ;Config register CONFIG2H @ 0x300003
  2405                           ;	Watchdog Timer
  2406                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2407                           ;	Watchdog Timer Postscale Select bits
  2408                           ;	WDTPS = 0xF, unprogrammed default
  2409  300003                     	org	3145731
  2410  300003  1E                 	db	30
  2411                           
  2412                           ;Config register CONFIG3L @ 0x300004
  2413                           ;	unspecified, using default values
  2414                           ;	Processor Data Memory Mode Select bits
  2415                           ;	MODE = 0x3, unprogrammed default
  2416                           ;	Address Bus Width Select bits
  2417                           ;	ADDRBW = 0x3, unprogrammed default
  2418                           ;	Data Bus Width Select bit
  2419                           ;	DATABW = 0x1, unprogrammed default
  2420                           ;	External Bus Data Wait Enable bit
  2421                           ;	WAIT = 0x1, unprogrammed default
  2422  300004                     	org	3145732
  2423  300004  F3                 	db	243
  2424                           
  2425                           ;Config register CONFIG3H @ 0x300005
  2426                           ;	CCP2 MUX bit
  2427                           ;	CCP2MX = 0x1, unprogrammed default
  2428                           ;	ECCP MUX bit
  2429                           ;	ECCPMX = 0x1, unprogrammed default
  2430                           ;	Low-Power Timer1 Oscillator Enable bit
  2431                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2432                           ;	MCLR Pin Enable bit
  2433                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  2434  300005                     	org	3145733
  2435  300005  83                 	db	131
  2436                           
  2437                           ;Config register CONFIG4L @ 0x300006
  2438                           ;	Stack Full/Underflow Reset Enable bit
  2439                           ;	STVREN = 0x1, unprogrammed default
  2440                           ;	Single-Supply ICSP Enable bit
  2441                           ;	LVP = OFF, Single-Supply ICSP disabled
  2442                           ;	Boot Block Size Select bits
  2443                           ;	BBSIZ = 0x0, unprogrammed default
  2444                           ;	Extended Instruction Set Enable bit
  2445                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2446                           ;	Background Debugger Enable bit
  2447                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  2448  300006                     	org	3145734
  2449  300006  81                 	db	129
  2450                           
  2451                           ; Padding undefined space
  2452  300007                     	org	3145735
  2453  300007  FF                 	db	255
  2454                           
  2455                           ;Config register CONFIG5L @ 0x300008
  2456                           ;	unspecified, using default values
  2457                           ;	Code Protection bit Block 0
  2458                           ;	CP0 = 0x1, unprogrammed default
  2459                           ;	Code Protection bit Block 1
  2460                           ;	CP1 = 0x1, unprogrammed default
  2461                           ;	Code Protection bit Block 2
  2462                           ;	CP2 = 0x1, unprogrammed default
  2463                           ;	Code Protection bit Block 3
  2464                           ;	CP3 = 0x1, unprogrammed default
  2465                           ;	Code Protection bit Block 4
  2466                           ;	CP4 = 0x1, unprogrammed default
  2467                           ;	Code Protection bit Block 5
  2468                           ;	CP5 = 0x1, unprogrammed default
  2469                           ;	Code Protection bit Block 6
  2470                           ;	CP6 = 0x1, unprogrammed default
  2471                           ;	Code Protection bit Block 7
  2472                           ;	CP7 = 0x1, unprogrammed default
  2473  300008                     	org	3145736
  2474  300008  FF                 	db	255
  2475                           
  2476                           ;Config register CONFIG5H @ 0x300009
  2477                           ;	unspecified, using default values
  2478                           ;	Boot Block Code Protection bit
  2479                           ;	CPB = 0x1, unprogrammed default
  2480                           ;	Data EEPROM Code Protection bit
  2481                           ;	CPD = 0x1, unprogrammed default
  2482  300009                     	org	3145737
  2483  300009  C0                 	db	192
  2484                           
  2485                           ;Config register CONFIG6L @ 0x30000A
  2486                           ;	unspecified, using default values
  2487                           ;	Write Protection bit Block 0
  2488                           ;	WRT0 = 0x1, unprogrammed default
  2489                           ;	Write Protection bit Block 1
  2490                           ;	WRT1 = 0x1, unprogrammed default
  2491                           ;	Write Protection bit Block 2
  2492                           ;	WRT2 = 0x1, unprogrammed default
  2493                           ;	Write Protection bit Block 3
  2494                           ;	WRT3 = 0x1, unprogrammed default
  2495                           ;	Write Protection bit Block 4
  2496                           ;	WRT4 = 0x1, unprogrammed default
  2497                           ;	Write Protection bit Block 5
  2498                           ;	WRT5 = 0x1, unprogrammed default
  2499                           ;	Write Protection bit Block 6
  2500                           ;	WRT6 = 0x1, unprogrammed default
  2501                           ;	Write Protection bit Block 7
  2502                           ;	WRT7 = 0x1, unprogrammed default
  2503  30000A                     	org	3145738
  2504  30000A  FF                 	db	255
  2505                           
  2506                           ;Config register CONFIG6H @ 0x30000B
  2507                           ;	unspecified, using default values
  2508                           ;	Configuration Register Write Protection bit
  2509                           ;	WRTC = 0x1, unprogrammed default
  2510                           ;	Boot Block Write Protection bit
  2511                           ;	WRTB = 0x1, unprogrammed default
  2512                           ;	Data EEPROM Write Protection bit
  2513                           ;	WRTD = 0x1, unprogrammed default
  2514  30000B                     	org	3145739
  2515  30000B  E0                 	db	224
  2516                           
  2517                           ;Config register CONFIG7L @ 0x30000C
  2518                           ;	unspecified, using default values
  2519                           ;	Table Read Protection bit Block 0
  2520                           ;	EBTR0 = 0x1, unprogrammed default
  2521                           ;	Table Read Protection bit Block 1
  2522                           ;	EBTR1 = 0x1, unprogrammed default
  2523                           ;	Table Read Protection bit Block 2
  2524                           ;	EBTR2 = 0x1, unprogrammed default
  2525                           ;	Table Read Protection bit Block 3
  2526                           ;	EBTR3 = 0x1, unprogrammed default
  2527                           ;	Table Read Protection bit Block 4
  2528                           ;	EBTR4 = 0x1, unprogrammed default
  2529                           ;	Table Read Protection bit Block 5
  2530                           ;	EBTR5 = 0x1, unprogrammed default
  2531                           ;	Table Read Protection bit Block 6
  2532                           ;	EBTR6 = 0x1, unprogrammed default
  2533                           ;	Table Read Protection bit Block 7
  2534                           ;	EBTR7 = 0x1, unprogrammed default
  2535  30000C                     	org	3145740
  2536  30000C  FF                 	db	255
  2537                           
  2538                           ;Config register CONFIG7H @ 0x30000D
  2539                           ;	unspecified, using default values
  2540                           ;	Boot Block Table Read Protection bit
  2541                           ;	EBTRB = 0x1, unprogrammed default
  2542  30000D                     	org	3145741
  2543  30000D  40                 	db	64
  2544                           tosu	equ	0xFFF
  2545                           tosh	equ	0xFFE
  2546                           tosl	equ	0xFFD
  2547                           stkptr	equ	0xFFC
  2548                           pclatu	equ	0xFFB
  2549                           pclath	equ	0xFFA
  2550                           pcl	equ	0xFF9
  2551                           tblptru	equ	0xFF8
  2552                           tblptrh	equ	0xFF7
  2553                           tblptrl	equ	0xFF6
  2554                           tablat	equ	0xFF5
  2555                           prodh	equ	0xFF4
  2556                           prodl	equ	0xFF3
  2557                           indf0	equ	0xFEF
  2558                           postinc0	equ	0xFEE
  2559                           postdec0	equ	0xFED
  2560                           preinc0	equ	0xFEC
  2561                           plusw0	equ	0xFEB
  2562                           fsr0h	equ	0xFEA
  2563                           fsr0l	equ	0xFE9
  2564                           wreg	equ	0xFE8
  2565                           indf1	equ	0xFE7
  2566                           postinc1	equ	0xFE6
  2567                           postdec1	equ	0xFE5
  2568                           preinc1	equ	0xFE4
  2569                           plusw1	equ	0xFE3
  2570                           fsr1h	equ	0xFE2
  2571                           fsr1l	equ	0xFE1
  2572                           bsr	equ	0xFE0
  2573                           indf2	equ	0xFDF
  2574                           postinc2	equ	0xFDE
  2575                           postdec2	equ	0xFDD
  2576                           preinc2	equ	0xFDC
  2577                           plusw2	equ	0xFDB
  2578                           fsr2h	equ	0xFDA
  2579                           fsr2l	equ	0xFD9
  2580                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         18
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     14      39
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv
    _EndGame->_Update7Segment

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1800
                                             10 COMRAM     4     4      0
                            _EndGame
                               _Init
                     _Update7Segment
                         _UpdateLeds
                            ___awdiv
                       _adc_complete
                      _correct_guess
                          _game_over
                             _mapADC
                        _rb4_handled
                     _special_number
 ---------------------------------------------------------------------------------
 (1) _rb4_handled                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mapADC                                               2     0      2       0
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _game_over                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _correct_guess                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_complete                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _EndGame                                              1     1      0     674
                                              6 COMRAM     1     1      0
                               _Init
                     _Update7Segment
                         _UpdateLeds
                            _restart
                     _special_number
 ---------------------------------------------------------------------------------
 (1) _special_number                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _restart                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UpdateLeds                                           2     0      2     272
                                              2 COMRAM     2     0      2
             _latcde_update_complete
 ---------------------------------------------------------------------------------
 (2) _latcde_update_complete                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Update7Segment                                       4     2      2     402
                                              2 COMRAM     4     2      2
              _latjh_update_complete
                     _special_number (ARG)
 ---------------------------------------------------------------------------------
 (2) _latjh_update_complete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                      _init_complete
 ---------------------------------------------------------------------------------
 (2) _init_complete                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
                          _hs_passed
 ---------------------------------------------------------------------------------
 (5) _hs_passed                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EndGame
     _Init
       _init_complete
     _Update7Segment
       _latjh_update_complete
       _special_number (ARG)
     _UpdateLeds
       _latcde_update_complete
     _restart
     _special_number
   _Init
     _init_complete
   _Update7Segment
     _latjh_update_complete
     _special_number (ARG)
   _UpdateLeds
     _latcde_update_complete
   ___awdiv
   _adc_complete
   _correct_guess
   _game_over
   _mapADC
   _rb4_handled
   _special_number

 _ISR (ROOT)
   _hs_passed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      E      27       1       41.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      27      32        0.0%
DATA                 0      0      27       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun May 31 23:01:12 2020

                              l7 086A                               l10 0862  
                             l13 085C                               l22 0860  
                             l31 0864                               l16 0868  
                             l34 085A                               l19 0866  
                             l28 085E                     ___awdiv@sign 001A  
                            l215 07CC                              l232 05CA  
                            l164 0364                              l237 081A  
                            l261 03C2                              l254 0694  
                            l239 082E                              l505 0758  
                            l177 0364                              l951 075A  
                            l961 07C2                              l953 0776  
                            l963 07C4                              l955 0794  
                            l947 0858                              l965 07C6  
                            l957 07AE                              l967 07C8  
                            l959 07C0                              _GIE 007F97  
                            u400 07E0                              u401 07DC  
                            u410 0806                              u411 0802  
                            u500 0334                              u420 01F6  
                            u501 0330                              u421 01F2  
                            u510 0358                              u430 021E  
                            u511 0354                              u431 021A  
                            u520 0612                              u600 0722  
                            u440 0246                              u521 060E  
                            u601 071E                              u441 0242  
                            u530 0636                              u610 0748  
                            u450 026E                              u531 0632  
                            u611 0744                              u451 026A  
                            u540 0660                              u460 0294  
                            u620 037C                              _ISR 0008  
                            u541 065C                              u461 0290  
                            u621 0378                              u550 0684  
                            u470 02BC                              u630 039A  
                            u551 0680                              u471 02B8  
                            u631 0396                              u560 06A8  
                            u480 02E4                              u640 03BA  
                            u561 06A4                              u481 02E0  
                            u641 03B6                              u570 06C2  
                            u490 030C                              u650 03D4  
                            u571 06BE                              u491 0308  
                            u651 03D0                              u580 06E8  
                            u581 06E4                              u590 0706  
                            u670 045C                              u591 0702  
                            u671 0458                              u680 048E  
                            u681 048A                              u665 0406  
                            u690 04C4                              u691 04C0  
                            wreg 000FE8                             ?_ISR 0013  
          __size_of_adc_complete 0002                             l1401 0246  
                           l1331 04E4                             l1341 050A  
                           l1333 04EA                             l1501 06B4  
                           l1351 0532                             l1343 0512  
                           l1335 04F2                             l1511 06E8  
                           l1503 06C2                             l1431 02C8  
                           l1423 02A0                             l1415 027A  
                           l1407 0252                             l1353 053A  
                           l1345 051A                             l1337 04FA  
                           l1361 05C4                             l1521 0722  
                           l1513 06F0                             l1505 06CA  
                           l1441 030C                             l1433 02E4  
                           l1425 02BC                             l1417 0294  
                           l1409 026E                             l1363 05C8  
                           l1611 05B6                             l1347 0522  
                           l1339 0502                             l1531 0748  
                           l1523 072A                             l1515 06F8  
                           l1507 06CE                             l1349 052A  
                           l1381 082A                             l1373 07CE  
                           l1461 05CC                             l1533 0750  
                           l1525 072C                             l1517 0706  
                           l1509 06D6                             l1541 037C  
                           l1359 0542                             l1375 07E0  
                           l1471 0612                             l1463 05E8  
                           l1527 0732                             l1519 070C  
                           l1455 0340                             l1447 0318  
                           l1439 02F0                             l1391 0202  
                           l1383 01DA                             l1551 03A2  
                           l1543 0384                             l1609 0560  
                           l1377 07F4                             l1481 064E  
                           l1473 061A                             l1465 05F0  
                           l1529 0738                             l1457 0358  
                           l1449 0334                             l1393 021E  
                           l1385 01F6                             l1561 03DC  
                           l1553 03A8                             l1545 0386  
                           l1537 0366                             l1379 0806  
                           l1491 068C                             l1483 0660  
                           l1475 0624                             l1467 05F8  
                           l1563 0426                             l1571 044A  
                           l1555 03BA                             l1547 0388  
                           l1539 036A                             l1485 0668  
                           l1477 0636                             l1469 0600  
                           l1493 0696                             l1581 049E  
                           l1573 045C                             l1565 042E  
                           l1557 03BE                             l1549 039A  
                           l1487 0672                             l1479 063E  
                           l1495 069A                             l1399 022A  
                           l1583 04C4                             l1575 0464  
                           l1567 0432                             l1559 03D4  
                           l1489 0684                             l1497 06A8  
                           l1585 04D4                             l1577 0468  
                           l1569 043E                             l1499 06B0  
                           l1587 04D8                             l1579 048E  
                           _ADIE 007CEE                             _ADIF 007CF6  
                           _ADON 007E10                             _LATJ 000F91  
                           _PEIE 007F96                             _RBIE 007F93  
                           _RBIF 007F90                             i2l25 086C  
                           _TMR0 000FD6                             _TMR1 000FCE  
                           _Init 075A                             _main 0366  
                           btemp 0028                             start 000E  
                __end_of_EndGame 0696                     ___param_bank 000000  
                          ??_ISR 0013                            ?_Init 0013  
                          ?_main 0013                  __end_of___awdiv 075A  
                  _correct_guess 0860                            _T0CON 000FD5  
                ___awdiv@divisor 0017                            _T1CON 000FCD  
                          _LATC1 007C59                            _LATD0 007C60  
                          _LATC2 007C5A                            _LATD1 007C61  
                          _LATD2 007C62                            _LATD3 007C63  
                          _LATE1 007C69                            _LATE2 007C6A  
           __size_of_rb4_handled 0002                            _LATH3 007C83  
                          i2l212 01D6                            i2l192 00B0  
                          i2l196 00E0                  ___awdiv@counter 0019  
                   _adc_complete 0862                            _TMR0L 000FD6  
                          _PORTB 000F81                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                            _TRISH 000F99  
                          _TRISJ 000F9A                 ??_special_number 0015  
        ?_latcde_update_complete 0013                            _state 0003  
                          tablat 000FF5                  __end_of_restart 0866  
                          ttemp5 0029                            ttemp6 002C  
                          ttemp7 0030                            status 000FD8  
                          wtemp8 0029                  __initialization 0830  
                   __end_of_Init 07CE                     __end_of_main 04E4  
                         ??_Init 0015                   ?_correct_guess 0013  
                         ??_main 001D                    __activetblptr 000003  
 __end_of_latcde_update_complete 0868                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
               ___awdiv@dividend 0015                           _GODONE 007E11  
                         i2l1201 00D0                           i2l1211 010C  
                         i2l1203 00E4                           i2l1213 0110  
                         i2l1221 012A                           i2l1205 00E6  
                         i2l1223 0138                           i2l1215 0118  
                         i2l1207 00F4                           i2l1233 0162  
                         i2l1241 01A6                           i2l1217 0120  
                         i2l1209 00FA                           i2l1235 018E  
                         i2l1243 01D2                           i2l1227 014A  
                         i2l1219 0128                           i2l1245 01D4  
                         i2l1237 019A                           i2l1229 0156  
                         i2l1181 002C                           i2l1191 0078  
                         i2l1175 0014                           i2l1185 003E  
                         i2l1177 0022                           i2l1187 0050  
                         i2l1195 0084                           i2l1179 002A  
                         i2l1197 00B8                           i2l1613 009A  
                         i2l1189 0064                           i2l1615 0178  
                         i2l1199 00BE                           i2l1617 01BC  
                         _INTCON 000FF2                        ??_EndGame 0019  
                         _TMR0IE 007F95                           _TMR0IF 007F92  
                         _TMR1IE 007CE8                           _TMR1IF 007CF0  
         __size_of_init_complete 0002                        ??___awdiv 0019  
                         _mapADC 01DA                           clear_0 0848  
               ___awdiv@quotient 001B                     __pdataCOMRAM 0027  
                     _UpdateLeds 07CE                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
          _latjh_update_complete 0868                        ??_restart 0015  
                     __accesstop 0060          __end_of__initialization 084E  
                  ___rparam_used 000001                   __pcstackCOMRAM 0013  
                ??_correct_guess 0015               __size_of_game_over 0002  
                     _adcon_flag 000B                 _end_game_counter 0021  
                  _init_complete 086A                    _current_guess 0005  
                     __pnvCOMRAM 0021               __size_of_hs_passed 0002  
                        ?_mapADC 0015                      ?_UpdateLeds 0015  
         ?_latjh_update_complete 0013                   ?_init_complete 0013  
                        i2u30_40 0138                          i2u30_41 0134  
                        i2u31_40 0146                          i2u23_40 0022  
                        i2u31_41 0142                          i2u23_41 001E  
                        i2u24_40 003A                          i2u24_41 0036  
                        i2u25_40 0050                          i2u25_41 004C  
                        i2u26_40 0078                          i2u26_41 0074  
                        i2u27_40 00D0                          i2u27_41 00CC  
                        i2u28_40 00F4                          i2u28_41 00F0  
                        i2u29_40 010C                          i2u29_41 0108  
        __size_of_Update7Segment 00E8                          _EndGame 05CC  
              __end_of_game_over 0860                          __Hparam 0000  
                        __Lparam 0000                          ___awdiv 0696  
                __size_of_mapADC 018C                    ??_rb4_handled 0015  
                        __pcinit 0830                          __ramtop 1000  
                        __ptext0 0366                          __ptext1 085C  
                        __ptext2 01DA                          __ptext3 085E  
                        __ptext4 0860                          __ptext5 0862  
                        __ptext6 0696                          __ptext7 05CC  
                        __ptext8 0858                          __ptext9 0864  
              __end_of_hs_passed 086E                     __size_of_ISR 01D2  
                        _rb_flag 0009                          _restart 0864  
                        _special 0027                   __pintcode_body 0012  
 Update7Segment@value_to_display 0015             end_of_initialization 084E  
                        int_func 0012              __size_of_UpdateLeds 0062  
              UpdateLeds@down_up 0015                          postinc0 000FEE  
                      _PORTBbits 000F81                  ??_init_complete 0015  
            __end_of_rb4_handled 085E          __size_of_special_number 0004  
                 _timer0_counter 0025                   _timer1_counter 0023  
                 __end_of_mapADC 0366                    __pidataCOMRAM 086E  
            start_initialization 0830                      __end_of_ISR 01DA  
                 _Update7Segment 04E4                         ??_mapADC 0017  
                    _rb4_handled 085C            __end_of_correct_guess 0862  
        ??_latjh_update_complete 0015         ??_latcde_update_complete 0015  
                  ?_adc_complete 0013                     ??_UpdateLeds 0017  
                    __pbssCOMRAM 0001           __end_of_Update7Segment 05CC  
                      _adc_value 0011                 _convertedDecimal 0007  
                       ?_EndGame 0013                        _game_over 085E  
             __end_of_UpdateLeds 0830                        __pintcode 0008  
                       ?___awdiv 0015                   ??_adc_complete 0015  
                ?_Update7Segment 0015                         ?_restart 0013  
                      _hs_passed 086C                   _special_number 0858  
                     ?_game_over 0013                    _half_sec_flag 000D  
__size_of_latcde_update_complete 0002                       ?_hs_passed 0013  
         __end_of_special_number 085C                 __size_of_EndGame 00CA  
                       __Hrparam 0000                         __Lrparam 0000  
               __size_of___awdiv 00C4            __end_of_init_complete 086C  
                       __ptext10 07CE                         __ptext11 0866  
                       __ptext12 04E4                         __ptext13 0868  
                       __ptext14 075A                         __ptext15 086A  
                       __ptext17 086C                 __size_of_restart 0002  
                  __size_of_Init 0074           _latcde_update_complete 0866  
                ?_special_number 0013                    __size_of_main 017E  
           __end_of_adc_complete 0864                      ??_game_over 0015  
                 _previous_state 0001                         int$flags 0028  
                   ?_rb4_handled 0013   __size_of_latjh_update_complete 0002  
  __end_of_latjh_update_complete 086A                      ??_hs_passed 0013  
                       intlevel2 0000                      _timer0_flag 000F  
               ??_Update7Segment 0017           __size_of_correct_guess 0002  
