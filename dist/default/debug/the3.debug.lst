

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun May 31 15:13:44 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F8722 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  0003B2                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _special
    75  0003B2  04                 	db	4
    76                           
    77                           	psect	nvCOMRAM
    78  000016                     __pnvCOMRAM:
    79                           	callstack 0
    80  000016                     _timer1_counter:
    81                           	callstack 0
    82  000016                     	ds	2
    83  000018                     _timer0_counter:
    84                           	callstack 0
    85  000018                     	ds	2
    86  0000                     _TMR0	set	4054
    87  0000                     _TMR1	set	4046
    88  0000                     _LATJ	set	3985
    89  0000                     _TRISB	set	3987
    90  0000                     _TRISE	set	3990
    91  0000                     _TRISD	set	3989
    92  0000                     _TRISC	set	3988
    93  0000                     _TRISH	set	3993
    94  0000                     _TRISJ	set	3994
    95  0000                     _ADCON2	set	4032
    96  0000                     _ADCON1	set	4033
    97  0000                     _ADCON0	set	4034
    98  0000                     _T1CON	set	4045
    99  0000                     _T0CON	set	4053
   100  0000                     _INTCON	set	4082
   101  0000                     _PORTB	set	3969
   102  0000                     _TMR0L	set	4054
   103  0000                     _LATE2	set	31850
   104  0000                     _LATC2	set	31834
   105  0000                     _LATE1	set	31849
   106  0000                     _LATC1	set	31833
   107  0000                     _LATD3	set	31843
   108  0000                     _LATD2	set	31842
   109  0000                     _LATD1	set	31841
   110  0000                     _LATD0	set	31840
   111  0000                     _LATH0	set	31872
   112  0000                     _GIE	set	32663
   113  0000                     _RBIE	set	32659
   114  0000                     _ADON	set	32272
   115  0000                     _TMR1IE	set	31976
   116  0000                     _TMR0IE	set	32661
   117  0000                     _RBIF	set	32656
   118  0000                     _TMR1IF	set	31984
   119  0000                     _TMR0IF	set	32658
   120  0000                     _ADIF	set	31990
   121                           
   122                           ; #config settings
   123                           
   124                           	psect	cinit
   125  00036C                     __pcinit:
   126                           	callstack 0
   127  00036C                     start_initialization:
   128                           	callstack 0
   129  00036C                     __initialization:
   130                           	callstack 0
   131                           
   132                           ; Initialize objects allocated to COMRAM (1 bytes)
   133                           ; load TBLPTR registers with __pidataCOMRAM
   134  00036C  0EB2               	movlw	low __pidataCOMRAM
   135  00036E  6EF6               	movwf	tblptrl,c
   136  000370  0E03               	movlw	high __pidataCOMRAM
   137  000372  6EF7               	movwf	tblptrh,c
   138  000374  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   139  000376  6EF8               	movwf	tblptru,c
   140  000378  0009               	tblrd		*+	;fetch initializer
   141  00037A  CFF5 F01A          	movff	tablat,__pdataCOMRAM
   142                           
   143                           ; Clear objects allocated to COMRAM (10 bytes)
   144  00037E  EE00  F00C         	lfsr	0,__pbssCOMRAM
   145  000382  0E0A               	movlw	10
   146  000384                     clear_0:
   147  000384  6AEE               	clrf	postinc0,c
   148  000386  06E8               	decf	wreg,f,c
   149  000388  E1FD               	bnz	clear_0
   150  00038A                     end_of_initialization:
   151                           	callstack 0
   152  00038A                     __end_of__initialization:
   153                           	callstack 0
   154  00038A  901B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   155  00038C  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   156  00038E  0100               	movlb	0
   157  000390  EF09  F000         	goto	_main	;jump to C main() function
   158                           
   159                           	psect	bssCOMRAM
   160  00000C                     __pbssCOMRAM:
   161                           	callstack 0
   162  00000C                     _rb_flag:
   163                           	callstack 0
   164  00000C                     	ds	2
   165  00000E                     _adcon_flag:
   166                           	callstack 0
   167  00000E                     	ds	2
   168  000010                     _timer1_flag:
   169                           	callstack 0
   170  000010                     	ds	2
   171  000012                     _timer0_flag:
   172                           	callstack 0
   173  000012                     	ds	2
   174  000014                     _adc_value:
   175                           	callstack 0
   176  000014                     	ds	2
   177                           
   178                           	psect	dataCOMRAM
   179  00001A                     __pdataCOMRAM:
   180                           	callstack 0
   181  00001A                     _special:
   182                           	callstack 0
   183  00001A                     	ds	1
   184                           
   185                           	psect	cstackCOMRAM
   186  000001                     __pcstackCOMRAM:
   187                           	callstack 0
   188  000001                     Update7Segment@value_to_display:
   189                           	callstack 0
   190  000001                     UpdateLeds@down_up:
   191                           	callstack 0
   192                           
   193                           ; 2 bytes @ 0x0
   194  000001                     	ds	2
   195  000003                     ??_Update7Segment:
   196  000003                     
   197                           ; 1 bytes @ 0x2
   198  000003                     	ds	2
   199  000005                     ??_main:
   200                           
   201                           ; 1 bytes @ 0x4
   202  000005                     	ds	3
   203  000008                     main@current_value:
   204                           	callstack 0
   205                           
   206                           ; 2 bytes @ 0x7
   207  000008                     	ds	2
   208  00000A                     main@guess:
   209                           	callstack 0
   210                           
   211                           ; 2 bytes @ 0x9
   212  00000A                     	ds	2
   213                           
   214 ;;
   215 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   216 ;;
   217 ;; *************** function _main *****************
   218 ;; Defined at:
   219 ;;		line 208 in file "source_headers/main.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;		None
   222 ;; Auto vars:     Size  Location     Type
   223 ;;  guess           2    9[COMRAM] int 
   224 ;;  current_valu    2    7[COMRAM] int 
   225 ;; Return value:  Size  Location     Type
   226 ;;                  1    wreg      void 
   227 ;; Registers used:
   228 ;;		wreg, status,2, status,0, cstack
   229 ;; Tracked objects:
   230 ;;		On entry : 0/0
   231 ;;		On exit  : 0/0
   232 ;;		Unchanged: 0/0
   233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   235 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   236 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   237 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   238 ;;Total ram usage:        7 bytes
   239 ;; Hardware stack levels required when called:    3
   240 ;; This function calls:
   241 ;;		_EndGame
   242 ;;		_Init
   243 ;;		_Restart
   244 ;;		_Update7Segment
   245 ;;		_UpdateLeds
   246 ;;		_adc_complete
   247 ;;		_correct_guess
   248 ;;		_game_over
   249 ;;		_hs_passed
   250 ;;		_rb4_handled
   251 ;;		_special_number
   252 ;; This function is called by:
   253 ;;		Startup code after reset
   254 ;; This function uses a non-reentrant model
   255 ;;
   256                           
   257                           	psect	text0
   258  000012                     __ptext0:
   259                           	callstack 0
   260  000012                     _main:
   261                           	callstack 28
   262  000012                     
   263                           ;source_headers/main.c: 209:     Init();
   264  000012  EC50  F001         	call	_Init	;wreg free
   265  000016                     l1138:
   266                           
   267                           ;source_headers/main.c: 212:         if (timer0_flag){
   268  000016  5012               	movf	_timer0_flag^0,w,c
   269  000018  1013               	iorwf	(_timer0_flag+1)^0,w,c
   270  00001A  B4D8               	btfsc	status,2,c
   271  00001C  EF12  F000         	goto	u271
   272  000020  EF14  F000         	goto	u270
   273  000024                     u271:
   274  000024  EF1A  F000         	goto	l1144
   275  000028                     u270:
   276  000028                     
   277                           ;source_headers/main.c: 214:             timer0_flag = 0;
   278  000028  0E00               	movlw	0
   279  00002A  6E13               	movwf	(_timer0_flag+1)^0,c
   280  00002C  0E00               	movlw	0
   281  00002E  6E12               	movwf	_timer0_flag^0,c
   282  000030                     
   283                           ;source_headers/main.c: 216:             adc_complete();
   284  000030  ECD3  F001         	call	_adc_complete	;wreg free
   285  000034                     l1144:
   286                           
   287                           ;source_headers/main.c: 218:         if (timer1_flag){
   288  000034  5010               	movf	_timer1_flag^0,w,c
   289  000036  1011               	iorwf	(_timer1_flag+1)^0,w,c
   290  000038  B4D8               	btfsc	status,2,c
   291  00003A  EF21  F000         	goto	u281
   292  00003E  EF23  F000         	goto	u280
   293  000042                     u281:
   294  000042  EF2F  F000         	goto	l1152
   295  000046                     u280:
   296  000046                     
   297                           ;source_headers/main.c: 219:             hs_passed();
   298  000046  ECD0  F001         	call	_hs_passed	;wreg free
   299                           
   300                           ;source_headers/main.c: 222:             EndGame();
   301  00004A  ECD8  F001         	call	_EndGame	;wreg free
   302                           
   303                           ;source_headers/main.c: 223:             Restart();
   304  00004E  ECCA  F001         	call	_Restart	;wreg free
   305  000052                     
   306                           ;source_headers/main.c: 224:             timer1_flag = 0;
   307  000052  0E00               	movlw	0
   308  000054  6E11               	movwf	(_timer1_flag+1)^0,c
   309  000056  0E00               	movlw	0
   310  000058  6E10               	movwf	_timer1_flag^0,c
   311  00005A                     
   312                           ;source_headers/main.c: 225:             game_over();
   313  00005A  ECD1  F001         	call	_game_over	;wreg free
   314  00005E                     l1152:
   315                           
   316                           ;source_headers/main.c: 227:         if (adcon_flag){
   317  00005E  500E               	movf	_adcon_flag^0,w,c
   318  000060  100F               	iorwf	(_adcon_flag+1)^0,w,c
   319  000062  B4D8               	btfsc	status,2,c
   320  000064  EF36  F000         	goto	u291
   321  000068  EF38  F000         	goto	u290
   322  00006C                     u291:
   323  00006C  EF42  F000         	goto	l1158
   324  000070                     u290:
   325  000070                     
   326                           ;source_headers/main.c: 229:             int current_value;;source_headers/main.c: 230: 
      +                                      Update7Segment(current_value);
   327  000070  C008  F001         	movff	main@current_value,Update7Segment@value_to_display
   328  000074  C009  F002         	movff	main@current_value+1,Update7Segment@value_to_display+1
   329  000078  EC8D  F000         	call	_Update7Segment	;wreg free
   330  00007C                     
   331                           ;source_headers/main.c: 231:             adcon_flag = 0;
   332  00007C  0E00               	movlw	0
   333  00007E  6E0F               	movwf	(_adcon_flag+1)^0,c
   334  000080  0E00               	movlw	0
   335  000082  6E0E               	movwf	_adcon_flag^0,c
   336  000084                     l1158:
   337                           
   338                           ;source_headers/main.c: 233:         if (rb_flag){
   339  000084  500C               	movf	_rb_flag^0,w,c
   340  000086  100D               	iorwf	(_rb_flag+1)^0,w,c
   341  000088  B4D8               	btfsc	status,2,c
   342  00008A  EF49  F000         	goto	u301
   343  00008E  EF4B  F000         	goto	u300
   344  000092                     u301:
   345  000092  EF0B  F000         	goto	l1138
   346  000096                     u300:
   347  000096                     
   348                           ;source_headers/main.c: 234:             rb4_handled();
   349  000096  ECCF  F001         	call	_rb4_handled	;wreg free
   350  00009A                     
   351                           ;source_headers/main.c: 235:             rb_flag = 0;
   352  00009A  0E00               	movlw	0
   353  00009C  6E0D               	movwf	(_rb_flag+1)^0,c
   354  00009E  0E00               	movlw	0
   355  0000A0  6E0C               	movwf	_rb_flag^0,c
   356  0000A2                     
   357                           ;source_headers/main.c: 238:             int guess;;source_headers/main.c: 239:         
      +                              if (guess < special_number())
   358  0000A2  ECCD  F001         	call	_special_number	;wreg free
   359  0000A6  6E05               	movwf	??_main^0,c
   360  0000A8  6A06               	clrf	(??_main+1)^0,c
   361  0000AA  5005               	movf	??_main^0,w,c
   362  0000AC  5C0A               	subwf	main@guess^0,w,c
   363  0000AE  500B               	movf	(main@guess+1)^0,w,c
   364  0000B0  0A80               	xorlw	128
   365  0000B2  6E07               	movwf	(??_main+2)^0,c
   366  0000B4  5006               	movf	(??_main+1)^0,w,c
   367  0000B6  0A80               	xorlw	128
   368  0000B8  5807               	subwfb	(??_main+2)^0,w,c
   369  0000BA  B0D8               	btfsc	status,0,c
   370  0000BC  EF62  F000         	goto	u311
   371  0000C0  EF64  F000         	goto	u310
   372  0000C4                     u311:
   373  0000C4  EF6C  F000         	goto	l1168
   374  0000C8                     u310:
   375  0000C8                     
   376                           ;source_headers/main.c: 240:                 UpdateLeds (0);
   377  0000C8  0E00               	movlw	0
   378  0000CA  6E02               	movwf	(UpdateLeds@down_up+1)^0,c
   379  0000CC  0E00               	movlw	0
   380  0000CE  6E01               	movwf	UpdateLeds@down_up^0,c
   381  0000D0  EC85  F001         	call	_UpdateLeds	;wreg free
   382  0000D4  EF0B  F000         	goto	l1138
   383  0000D8                     l1168:
   384  0000D8  ECCD  F001         	call	_special_number	;wreg free
   385  0000DC  6E05               	movwf	??_main^0,c
   386  0000DE  6A06               	clrf	(??_main+1)^0,c
   387  0000E0  500A               	movf	main@guess^0,w,c
   388  0000E2  5C05               	subwf	??_main^0,w,c
   389  0000E4  5006               	movf	(??_main+1)^0,w,c
   390  0000E6  0A80               	xorlw	128
   391  0000E8  6E07               	movwf	(??_main+2)^0,c
   392  0000EA  500B               	movf	(main@guess+1)^0,w,c
   393  0000EC  0A80               	xorlw	128
   394  0000EE  5807               	subwfb	(??_main+2)^0,w,c
   395  0000F0  B0D8               	btfsc	status,0,c
   396  0000F2  EF7D  F000         	goto	u321
   397  0000F6  EF7F  F000         	goto	u320
   398  0000FA                     u321:
   399  0000FA  EF87  F000         	goto	l1172
   400  0000FE                     u320:
   401  0000FE                     
   402                           ;source_headers/main.c: 242:                 UpdateLeds (1);
   403  0000FE  0E00               	movlw	0
   404  000100  6E02               	movwf	(UpdateLeds@down_up+1)^0,c
   405  000102  0E01               	movlw	1
   406  000104  6E01               	movwf	UpdateLeds@down_up^0,c
   407  000106  EC85  F001         	call	_UpdateLeds	;wreg free
   408  00010A  EF0B  F000         	goto	l1138
   409  00010E                     l1172:
   410                           
   411                           ;source_headers/main.c: 244:             {;source_headers/main.c: 245:                 c
      +                          orrect_guess();
   412  00010E  ECD2  F001         	call	_correct_guess	;wreg free
   413                           
   414                           ;source_headers/main.c: 246:                 continue;
   415  000112  EF0B  F000         	goto	l1138
   416  000116  EF07  F000         	goto	start
   417  00011A                     __end_of_main:
   418                           	callstack 0
   419                           
   420 ;; *************** function _special_number *****************
   421 ;; Defined at:
   422 ;;		line 14 in file "source_headers/breakpoints.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      unsigned char 
   429 ;; Registers used:
   430 ;;		wreg, status,2
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   440 ;;Total ram usage:        0 bytes
   441 ;; Hardware stack levels used:    1
   442 ;; Hardware stack levels required when called:    1
   443 ;; This function calls:
   444 ;;		Nothing
   445 ;; This function is called by:
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text1
   451  00039A                     __ptext1:
   452                           	callstack 0
   453  00039A                     _special_number:
   454                           	callstack 29
   455  00039A  501A               	movf	_special^0,w,c	;volatile
   456  00039C  0012               	return		;funcret
   457  00039E                     __end_of_special_number:
   458                           	callstack 0
   459                           
   460 ;; *************** function _rb4_handled *****************
   461 ;; Defined at:
   462 ;;		line 7 in file "source_headers/breakpoints.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		None
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels used:    1
   482 ;; Hardware stack levels required when called:    1
   483 ;; This function calls:
   484 ;;		Nothing
   485 ;; This function is called by:
   486 ;;		_main
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           	psect	text2
   491  00039E                     __ptext2:
   492                           	callstack 0
   493  00039E                     _rb4_handled:
   494                           	callstack 29
   495  00039E  0012               	return		;funcret
   496  0003A0                     __end_of_rb4_handled:
   497                           	callstack 0
   498                           
   499 ;; *************** function _hs_passed *****************
   500 ;; Defined at:
   501 ;;		line 11 in file "source_headers/breakpoints.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;		None
   504 ;; Auto vars:     Size  Location     Type
   505 ;;		None
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		None
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   519 ;;Total ram usage:        0 bytes
   520 ;; Hardware stack levels used:    1
   521 ;; Hardware stack levels required when called:    1
   522 ;; This function calls:
   523 ;;		Nothing
   524 ;; This function is called by:
   525 ;;		_main
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	text3
   530  0003A0                     __ptext3:
   531                           	callstack 0
   532  0003A0                     _hs_passed:
   533                           	callstack 29
   534  0003A0  0012               	return		;funcret
   535  0003A2                     __end_of_hs_passed:
   536                           	callstack 0
   537                           
   538 ;; *************** function _game_over *****************
   539 ;; Defined at:
   540 ;;		line 12 in file "source_headers/breakpoints.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		None
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   558 ;;Total ram usage:        0 bytes
   559 ;; Hardware stack levels used:    1
   560 ;; Hardware stack levels required when called:    1
   561 ;; This function calls:
   562 ;;		Nothing
   563 ;; This function is called by:
   564 ;;		_main
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           	psect	text4
   569  0003A2                     __ptext4:
   570                           	callstack 0
   571  0003A2                     _game_over:
   572                           	callstack 29
   573  0003A2  0012               	return		;funcret
   574  0003A4                     __end_of_game_over:
   575                           	callstack 0
   576                           
   577 ;; *************** function _correct_guess *****************
   578 ;; Defined at:
   579 ;;		line 10 in file "source_headers/breakpoints.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		None
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;Total ram usage:        0 bytes
   598 ;; Hardware stack levels used:    1
   599 ;; Hardware stack levels required when called:    1
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text5
   608  0003A4                     __ptext5:
   609                           	callstack 0
   610  0003A4                     _correct_guess:
   611                           	callstack 29
   612  0003A4  0012               	return		;funcret
   613  0003A6                     __end_of_correct_guess:
   614                           	callstack 0
   615                           
   616 ;; *************** function _adc_complete *****************
   617 ;; Defined at:
   618 ;;		line 6 in file "source_headers/breakpoints.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		None
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used:    1
   638 ;; Hardware stack levels required when called:    1
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text6
   647  0003A6                     __ptext6:
   648                           	callstack 0
   649  0003A6                     _adc_complete:
   650                           	callstack 29
   651  0003A6  0012               	return		;funcret
   652  0003A8                     __end_of_adc_complete:
   653                           	callstack 0
   654                           
   655 ;; *************** function _UpdateLeds *****************
   656 ;; Defined at:
   657 ;;		line 156 in file "source_headers/main.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  down_up         2    0[COMRAM] int 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2, status,0, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;Total ram usage:        2 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; Hardware stack levels required when called:    2
   678 ;; This function calls:
   679 ;;		_latcde_update_complete
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           	psect	text7
   686  00030A                     __ptext7:
   687                           	callstack 0
   688  00030A                     _UpdateLeds:
   689                           	callstack 28
   690  00030A                     
   691                           ;source_headers/main.c: 159:     if (down_up==0){
   692  00030A  5001               	movf	UpdateLeds@down_up^0,w,c
   693  00030C  1002               	iorwf	(UpdateLeds@down_up+1)^0,w,c
   694  00030E  A4D8               	btfss	status,2,c
   695  000310  EF8C  F001         	goto	u251
   696  000314  EF8E  F001         	goto	u250
   697  000318                     u251:
   698  000318  EF98  F001         	goto	l1130
   699  00031C                     u250:
   700  00031C                     
   701                           ;source_headers/main.c: 161:         LATD0=1;
   702  00031C  808C               	bsf	3980,0,c	;volatile
   703                           
   704                           ;source_headers/main.c: 162:         LATD1=1;
   705  00031E  828C               	bsf	3980,1,c	;volatile
   706                           
   707                           ;source_headers/main.c: 163:         LATD2=1;
   708  000320  848C               	bsf	3980,2,c	;volatile
   709                           
   710                           ;source_headers/main.c: 164:         LATD3=1;
   711  000322  868C               	bsf	3980,3,c	;volatile
   712                           
   713                           ;source_headers/main.c: 166:         LATC1=0;
   714  000324  928B               	bcf	3979,1,c	;volatile
   715                           
   716                           ;source_headers/main.c: 167:         LATE1=0;
   717  000326  928D               	bcf	3981,1,c	;volatile
   718                           
   719                           ;source_headers/main.c: 168:         LATC2=1;
   720  000328  848B               	bsf	3979,2,c	;volatile
   721                           
   722                           ;source_headers/main.c: 169:         LATE2=1;
   723  00032A  848D               	bsf	3981,2,c	;volatile
   724                           
   725                           ;source_headers/main.c: 170:     }
   726  00032C  EFB3  F001         	goto	l1134
   727  000330                     l1130:
   728  000330  0401               	decf	UpdateLeds@down_up^0,w,c
   729  000332  1002               	iorwf	(UpdateLeds@down_up+1)^0,w,c
   730  000334  A4D8               	btfss	status,2,c
   731  000336  EF9F  F001         	goto	u261
   732  00033A  EFA1  F001         	goto	u260
   733  00033E                     u261:
   734  00033E  EFAB  F001         	goto	l194
   735  000342                     u260:
   736  000342                     
   737                           ;source_headers/main.c: 173:         LATD0=1;
   738  000342  808C               	bsf	3980,0,c	;volatile
   739                           
   740                           ;source_headers/main.c: 174:         LATD1=1;
   741  000344  828C               	bsf	3980,1,c	;volatile
   742                           
   743                           ;source_headers/main.c: 175:         LATD2=1;
   744  000346  848C               	bsf	3980,2,c	;volatile
   745                           
   746                           ;source_headers/main.c: 176:         LATD3=1;
   747  000348  868C               	bsf	3980,3,c	;volatile
   748                           
   749                           ;source_headers/main.c: 178:         LATC1=1;
   750  00034A  828B               	bsf	3979,1,c	;volatile
   751                           
   752                           ;source_headers/main.c: 179:         LATE1=1;
   753  00034C  828D               	bsf	3981,1,c	;volatile
   754                           
   755                           ;source_headers/main.c: 180:         LATC2=0;
   756  00034E  948B               	bcf	3979,2,c	;volatile
   757                           
   758                           ;source_headers/main.c: 181:         LATE2=0;
   759  000350  948D               	bcf	3981,2,c	;volatile
   760                           
   761                           ;source_headers/main.c: 182:     }
   762  000352  EFB3  F001         	goto	l1134
   763  000356                     l194:
   764                           
   765                           ;source_headers/main.c: 185:         LATD0=0;
   766  000356  908C               	bcf	3980,0,c	;volatile
   767                           
   768                           ;source_headers/main.c: 186:         LATD1=0;
   769  000358  928C               	bcf	3980,1,c	;volatile
   770                           
   771                           ;source_headers/main.c: 187:         LATD2=0;
   772  00035A  948C               	bcf	3980,2,c	;volatile
   773                           
   774                           ;source_headers/main.c: 188:         LATD3=0;
   775  00035C  968C               	bcf	3980,3,c	;volatile
   776                           
   777                           ;source_headers/main.c: 190:         LATC1=0;
   778  00035E  928B               	bcf	3979,1,c	;volatile
   779                           
   780                           ;source_headers/main.c: 191:         LATE1=0;
   781  000360  928D               	bcf	3981,1,c	;volatile
   782                           
   783                           ;source_headers/main.c: 192:         LATC2=0;
   784  000362  948B               	bcf	3979,2,c	;volatile
   785                           
   786                           ;source_headers/main.c: 193:         LATE2=0;
   787  000364  948D               	bcf	3981,2,c	;volatile
   788  000366                     l1134:
   789                           
   790                           ;source_headers/main.c: 195:     latcde_update_complete();
   791  000366  ECD4  F001         	call	_latcde_update_complete	;wreg free
   792  00036A  0012               	return		;funcret
   793  00036C                     __end_of_UpdateLeds:
   794                           	callstack 0
   795                           
   796 ;; *************** function _latcde_update_complete *****************
   797 ;; Defined at:
   798 ;;		line 9 in file "source_headers/breakpoints.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;		None
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		None
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;Total ram usage:        0 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; Hardware stack levels required when called:    1
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_UpdateLeds
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text8
   827  0003A8                     __ptext8:
   828                           	callstack 0
   829  0003A8                     _latcde_update_complete:
   830                           	callstack 28
   831  0003A8  0012               	return		;funcret
   832  0003AA                     __end_of_latcde_update_complete:
   833                           	callstack 0
   834                           
   835 ;; *************** function _Update7Segment *****************
   836 ;; Defined at:
   837 ;;		line 117 in file "source_headers/main.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  value_to_dis    2    0[COMRAM] int 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, status,2, status,0, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;Total ram usage:        4 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    2
   858 ;; This function calls:
   859 ;;		_latjh_update_complete
   860 ;; This function is called by:
   861 ;;		_main
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           	psect	text9
   866  00011A                     __ptext9:
   867                           	callstack 0
   868  00011A                     _Update7Segment:
   869                           	callstack 28
   870  00011A                     
   871                           ;source_headers/main.c: 119:     LATH0=1;
   872  00011A  8090               	bsf	3984,0,c	;volatile
   873                           
   874                           ;source_headers/main.c: 120:     switch (value_to_display){
   875  00011C  EFB8  F000         	goto	l1118
   876  000120                     l1096:
   877                           
   878                           ;source_headers/main.c: 122:             LATJ = 63;
   879  000120  0E3F               	movlw	63
   880  000122  6E91               	movwf	145,c	;volatile
   881                           
   882                           ;source_headers/main.c: 123:             break;
   883  000124  EFEE  F000         	goto	l179
   884  000128                     l1098:
   885                           
   886                           ;source_headers/main.c: 125:             LATJ = 6;
   887  000128  0E06               	movlw	6
   888  00012A  6E91               	movwf	145,c	;volatile
   889                           
   890                           ;source_headers/main.c: 126:             break;
   891  00012C  EFEE  F000         	goto	l179
   892  000130                     l1100:
   893                           
   894                           ;source_headers/main.c: 128:             LATJ = 91;
   895  000130  0E5B               	movlw	91
   896  000132  6E91               	movwf	145,c	;volatile
   897                           
   898                           ;source_headers/main.c: 129:             break;
   899  000134  EFEE  F000         	goto	l179
   900  000138                     l1102:
   901                           
   902                           ;source_headers/main.c: 131:             LATJ = 79;
   903  000138  0E4F               	movlw	79
   904  00013A  6E91               	movwf	145,c	;volatile
   905                           
   906                           ;source_headers/main.c: 132:             break;
   907  00013C  EFEE  F000         	goto	l179
   908  000140                     l1104:
   909                           
   910                           ;source_headers/main.c: 134:             LATJ = 102;
   911  000140  0E66               	movlw	102
   912  000142  6E91               	movwf	145,c	;volatile
   913                           
   914                           ;source_headers/main.c: 135:             break;
   915  000144  EFEE  F000         	goto	l179
   916  000148                     l1106:
   917                           
   918                           ;source_headers/main.c: 137:             LATJ = 109;
   919  000148  0E6D               	movlw	109
   920  00014A  6E91               	movwf	145,c	;volatile
   921                           
   922                           ;source_headers/main.c: 138:             break;
   923  00014C  EFEE  F000         	goto	l179
   924  000150                     l1108:
   925                           
   926                           ;source_headers/main.c: 140:             LATJ = 125;
   927  000150  0E7D               	movlw	125
   928  000152  6E91               	movwf	145,c	;volatile
   929                           
   930                           ;source_headers/main.c: 141:             break;
   931  000154  EFEE  F000         	goto	l179
   932  000158                     l1110:
   933                           
   934                           ;source_headers/main.c: 143:             LATJ = 7;
   935  000158  0E07               	movlw	7
   936  00015A  6E91               	movwf	145,c	;volatile
   937                           
   938                           ;source_headers/main.c: 144:             break;
   939  00015C  EFEE  F000         	goto	l179
   940  000160                     l1112:
   941                           
   942                           ;source_headers/main.c: 146:             LATJ = 127;
   943  000160  0E7F               	movlw	127
   944  000162  6E91               	movwf	145,c	;volatile
   945                           
   946                           ;source_headers/main.c: 147:             break;
   947  000164  EFEE  F000         	goto	l179
   948  000168                     l1114:
   949                           
   950                           ;source_headers/main.c: 149:             LATJ = 111;
   951  000168  0E6F               	movlw	111
   952  00016A  6E91               	movwf	145,c	;volatile
   953                           
   954                           ;source_headers/main.c: 150:             break;
   955  00016C  EFEE  F000         	goto	l179
   956  000170                     l1118:
   957  000170  C001  F003         	movff	Update7Segment@value_to_display,??_Update7Segment
   958  000174  C002  F004         	movff	Update7Segment@value_to_display+1,??_Update7Segment+1
   959                           
   960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   961                           ; Switch size 1, requested type "simple"
   962                           ; Number of cases is 1, Range of values is 0 to 0
   963                           ; switch strategies available:
   964                           ; Name         Instructions Cycles
   965                           ; simple_byte            4     3 (average)
   966                           ;	Chosen strategy is simple_byte
   967  000178  5004               	movf	(??_Update7Segment+1)^0,w,c
   968  00017A  0A00               	xorlw	0	; case 0
   969  00017C  B4D8               	btfsc	status,2,c
   970  00017E  EFC3  F000         	goto	l1178
   971  000182  EFEE  F000         	goto	l179
   972  000186                     l1178:
   973                           
   974                           ; Switch size 1, requested type "simple"
   975                           ; Number of cases is 10, Range of values is 0 to 9
   976                           ; switch strategies available:
   977                           ; Name         Instructions Cycles
   978                           ; simple_byte           31    16 (average)
   979                           ;	Chosen strategy is simple_byte
   980  000186  5003               	movf	??_Update7Segment^0,w,c
   981  000188  0A00               	xorlw	0	; case 0
   982  00018A  B4D8               	btfsc	status,2,c
   983  00018C  EF90  F000         	goto	l1096
   984  000190  0A01               	xorlw	1	; case 1
   985  000192  B4D8               	btfsc	status,2,c
   986  000194  EF94  F000         	goto	l1098
   987  000198  0A03               	xorlw	3	; case 2
   988  00019A  B4D8               	btfsc	status,2,c
   989  00019C  EF98  F000         	goto	l1100
   990  0001A0  0A01               	xorlw	1	; case 3
   991  0001A2  B4D8               	btfsc	status,2,c
   992  0001A4  EF9C  F000         	goto	l1102
   993  0001A8  0A07               	xorlw	7	; case 4
   994  0001AA  B4D8               	btfsc	status,2,c
   995  0001AC  EFA0  F000         	goto	l1104
   996  0001B0  0A01               	xorlw	1	; case 5
   997  0001B2  B4D8               	btfsc	status,2,c
   998  0001B4  EFA4  F000         	goto	l1106
   999  0001B8  0A03               	xorlw	3	; case 6
  1000  0001BA  B4D8               	btfsc	status,2,c
  1001  0001BC  EFA8  F000         	goto	l1108
  1002  0001C0  0A01               	xorlw	1	; case 7
  1003  0001C2  B4D8               	btfsc	status,2,c
  1004  0001C4  EFAC  F000         	goto	l1110
  1005  0001C8  0A0F               	xorlw	15	; case 8
  1006  0001CA  B4D8               	btfsc	status,2,c
  1007  0001CC  EFB0  F000         	goto	l1112
  1008  0001D0  0A01               	xorlw	1	; case 9
  1009  0001D2  B4D8               	btfsc	status,2,c
  1010  0001D4  EFB4  F000         	goto	l1114
  1011  0001D8  EFEE  F000         	goto	l179
  1012  0001DC                     l179:
  1013                           
  1014                           ;source_headers/main.c: 152:     LATH0 = 0;
  1015  0001DC  9090               	bcf	3984,0,c	;volatile
  1016  0001DE                     
  1017                           ;source_headers/main.c: 153:     latjh_update_complete();
  1018  0001DE  ECD5  F001         	call	_latjh_update_complete	;wreg free
  1019  0001E2  0012               	return		;funcret
  1020  0001E4                     __end_of_Update7Segment:
  1021                           	callstack 0
  1022                           
  1023 ;; *************** function _latjh_update_complete *****************
  1024 ;; Defined at:
  1025 ;;		line 8 in file "source_headers/breakpoints.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		None
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;Total ram usage:        0 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    1
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_Update7Segment
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text10
  1054  0003AA                     __ptext10:
  1055                           	callstack 0
  1056  0003AA                     _latjh_update_complete:
  1057                           	callstack 28
  1058  0003AA  0012               	return		;funcret
  1059  0003AC                     __end_of_latjh_update_complete:
  1060                           	callstack 0
  1061                           
  1062 ;; *************** function _Restart *****************
  1063 ;; Defined at:
  1064 ;;		line 202 in file "source_headers/main.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;Total ram usage:        0 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    2
  1085 ;; This function calls:
  1086 ;;		_restart
  1087 ;; This function is called by:
  1088 ;;		_main
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text11
  1093  000394                     __ptext11:
  1094                           	callstack 0
  1095  000394                     _Restart:
  1096                           	callstack 28
  1097  000394                     
  1098                           ;source_headers/main.c: 205:     restart();
  1099  000394  ECD6  F001         	call	_restart	;wreg free
  1100  000398  0012               	return		;funcret
  1101  00039A                     __end_of_Restart:
  1102                           	callstack 0
  1103                           
  1104 ;; *************** function _restart *****************
  1105 ;; Defined at:
  1106 ;;		line 13 in file "source_headers/breakpoints.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		None
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;Total ram usage:        0 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    1
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_Restart
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text12
  1135  0003AC                     __ptext12:
  1136                           	callstack 0
  1137  0003AC                     _restart:
  1138                           	callstack 28
  1139  0003AC  0012               	return		;funcret
  1140  0003AE                     __end_of_restart:
  1141                           	callstack 0
  1142                           
  1143 ;; *************** function _Init *****************
  1144 ;; Defined at:
  1145 ;;		line 77 in file "source_headers/main.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;		None
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg, status,2, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;Total ram usage:        0 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    2
  1166 ;; This function calls:
  1167 ;;		_init_complete
  1168 ;; This function is called by:
  1169 ;;		_main
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text13
  1174  0002A0                     __ptext13:
  1175                           	callstack 0
  1176  0002A0                     _Init:
  1177                           	callstack 28
  1178  0002A0                     
  1179                           ;source_headers/main.c: 79:     INTCON = 0;
  1180  0002A0  0E00               	movlw	0
  1181  0002A2  6EF2               	movwf	242,c	;volatile
  1182                           
  1183                           ;source_headers/main.c: 81:     TMR0 = 0;
  1184  0002A4  0E00               	movlw	0
  1185  0002A6  6ED7               	movwf	215,c	;volatile
  1186  0002A8  0E00               	movlw	0
  1187  0002AA  6ED6               	movwf	214,c	;volatile
  1188                           
  1189                           ;source_headers/main.c: 82:     T0CON = 0b11010111;
  1190  0002AC  0ED7               	movlw	215
  1191  0002AE  6ED5               	movwf	213,c	;volatile
  1192                           
  1193                           ;source_headers/main.c: 83:     TMR0L = 61;
  1194  0002B0  0E3D               	movlw	61
  1195  0002B2  6ED6               	movwf	214,c	;volatile
  1196                           
  1197                           ;source_headers/main.c: 85:     timer0_counter = 10;
  1198  0002B4  0E00               	movlw	0
  1199  0002B6  6E19               	movwf	(_timer0_counter+1)^0,c
  1200  0002B8  0E0A               	movlw	10
  1201  0002BA  6E18               	movwf	_timer0_counter^0,c
  1202  0002BC                     
  1203                           ;source_headers/main.c: 86:     TMR0IE = 1;
  1204  0002BC  8AF2               	bsf	4082,5,c	;volatile
  1205                           
  1206                           ;source_headers/main.c: 89:     TMR1 = 0;
  1207  0002BE  0E00               	movlw	0
  1208  0002C0  6ECF               	movwf	207,c	;volatile
  1209  0002C2  0E00               	movlw	0
  1210  0002C4  6ECE               	movwf	206,c	;volatile
  1211                           
  1212                           ;source_headers/main.c: 90:     T1CON = 0b11111001;
  1213  0002C6  0EF9               	movlw	249
  1214  0002C8  6ECD               	movwf	205,c	;volatile
  1215                           
  1216                           ;source_headers/main.c: 91:     TMR1 = 15536;
  1217  0002CA  0E3C               	movlw	60
  1218  0002CC  6ECF               	movwf	207,c	;volatile
  1219  0002CE  0EB0               	movlw	176
  1220  0002D0  6ECE               	movwf	206,c	;volatile
  1221                           
  1222                           ;source_headers/main.c: 93:     timer1_counter = 125;
  1223  0002D2  0E00               	movlw	0
  1224  0002D4  6E17               	movwf	(_timer1_counter+1)^0,c
  1225  0002D6  0E7D               	movlw	125
  1226  0002D8  6E16               	movwf	_timer1_counter^0,c
  1227  0002DA                     
  1228                           ;source_headers/main.c: 94:     TMR1IE = 1;
  1229  0002DA  809D               	bsf	3997,0,c	;volatile
  1230                           
  1231                           ;source_headers/main.c: 96:     ADCON0 = 0x30;
  1232  0002DC  0E30               	movlw	48
  1233  0002DE  6EC2               	movwf	194,c	;volatile
  1234                           
  1235                           ;source_headers/main.c: 97:     ADCON1 = 0;
  1236  0002E0  0E00               	movlw	0
  1237  0002E2  6EC1               	movwf	193,c	;volatile
  1238                           
  1239                           ;source_headers/main.c: 98:     ADCON2 = 0xAA;
  1240  0002E4  0EAA               	movlw	170
  1241  0002E6  6EC0               	movwf	192,c	;volatile
  1242  0002E8                     
  1243                           ;source_headers/main.c: 100:     ADON=1;
  1244  0002E8  80C2               	bsf	4034,0,c	;volatile
  1245                           
  1246                           ;source_headers/main.c: 103:     TRISJ = 0;
  1247  0002EA  0E00               	movlw	0
  1248  0002EC  6E9A               	movwf	154,c	;volatile
  1249                           
  1250                           ;source_headers/main.c: 104:     TRISH = 0;
  1251  0002EE  0E00               	movlw	0
  1252  0002F0  6E99               	movwf	153,c	;volatile
  1253                           
  1254                           ;source_headers/main.c: 105:     TRISC = 0;
  1255  0002F2  0E00               	movlw	0
  1256  0002F4  6E94               	movwf	148,c	;volatile
  1257                           
  1258                           ;source_headers/main.c: 106:     TRISD = 0;
  1259  0002F6  0E00               	movlw	0
  1260  0002F8  6E95               	movwf	149,c	;volatile
  1261                           
  1262                           ;source_headers/main.c: 107:     TRISE = 0;
  1263  0002FA  0E00               	movlw	0
  1264  0002FC  6E96               	movwf	150,c	;volatile
  1265  0002FE                     
  1266                           ;source_headers/main.c: 108:     TRISB = 0b11111111;
  1267  0002FE  6893               	setf	147,c	;volatile
  1268  000300                     
  1269                           ;source_headers/main.c: 109:     RBIE = 1;
  1270  000300  86F2               	bsf	4082,3,c	;volatile
  1271  000302                     
  1272                           ;source_headers/main.c: 112:     GIE = 1;
  1273  000302  8EF2               	bsf	4082,7,c	;volatile
  1274  000304                     
  1275                           ;source_headers/main.c: 114:     init_complete();
  1276  000304  ECD7  F001         	call	_init_complete	;wreg free
  1277  000308  0012               	return		;funcret
  1278  00030A                     __end_of_Init:
  1279                           	callstack 0
  1280                           
  1281 ;; *************** function _init_complete *****************
  1282 ;; Defined at:
  1283 ;;		line 5 in file "source_headers/breakpoints.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		None
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;Total ram usage:        0 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; Hardware stack levels required when called:    1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_Init
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text14
  1312  0003AE                     __ptext14:
  1313                           	callstack 0
  1314  0003AE                     _init_complete:
  1315                           	callstack 28
  1316  0003AE  0012               	return		;funcret
  1317  0003B0                     __end_of_init_complete:
  1318                           	callstack 0
  1319                           
  1320 ;; *************** function _EndGame *****************
  1321 ;; Defined at:
  1322 ;;		line 198 in file "source_headers/main.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;		None
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		None
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;Total ram usage:        0 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    1
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text15
  1351  0003B0                     __ptext15:
  1352                           	callstack 0
  1353  0003B0                     _EndGame:
  1354                           	callstack 29
  1355  0003B0  0012               	return		;funcret
  1356  0003B2                     __end_of_EndGame:
  1357                           	callstack 0
  1358                           
  1359 ;; *************** function _ISR *****************
  1360 ;; Defined at:
  1361 ;;		line 39 in file "source_headers/main.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;Total ram usage:        0 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		Interrupt level 2
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	intcode
  1389  000008                     __pintcode:
  1390                           	callstack 0
  1391  000008                     _ISR:
  1392                           	callstack 28
  1393                           
  1394                           ;incstack = 0
  1395  000008  821B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1396  00000A  EDF2  F000         	call	int_func,f	;refresh shadow registers
  1397                           
  1398                           	psect	intcode_body
  1399  0001E4                     __pintcode_body:
  1400                           	callstack 28
  1401  0001E4                     int_func:
  1402                           	callstack 28
  1403  0001E4  0006               	pop		; remove dummy address from shadow register refresh
  1404  0001E6                     
  1405                           ;source_headers/main.c: 42:     if(ADIF == 1) {
  1406  0001E6  AC9E               	btfss	3998,6,c	;volatile
  1407  0001E8  EFF8  F000         	goto	i2u13_41
  1408  0001EC  EFFA  F000         	goto	i2u13_40
  1409  0001F0                     i2u13_41:
  1410  0001F0  EFFF  F000         	goto	i2l1022
  1411  0001F4                     i2u13_40:
  1412  0001F4                     
  1413                           ;source_headers/main.c: 44:         adcon_flag = 1 ;
  1414  0001F4  0E00               	movlw	0
  1415  0001F6  6E0F               	movwf	(_adcon_flag+1)^0,c
  1416  0001F8  0E01               	movlw	1
  1417  0001FA  6E0E               	movwf	_adcon_flag^0,c
  1418  0001FC                     
  1419                           ;source_headers/main.c: 45:         ADIF = 0 ;
  1420  0001FC  9C9E               	bcf	3998,6,c	;volatile
  1421  0001FE                     i2l1022:
  1422                           
  1423                           ;source_headers/main.c: 47:     if(TMR0IF == 1){
  1424  0001FE  A4F2               	btfss	4082,2,c	;volatile
  1425  000200  EF04  F001         	goto	i2u14_41
  1426  000204  EF06  F001         	goto	i2u14_40
  1427  000208                     i2u14_41:
  1428  000208  EF1D  F001         	goto	i2l1032
  1429  00020C                     i2u14_40:
  1430  00020C                     
  1431                           ;source_headers/main.c: 49:         timer0_counter--;
  1432  00020C  0618               	decf	_timer0_counter^0,f,c
  1433  00020E  A0D8               	btfss	status,0,c
  1434  000210  0619               	decf	(_timer0_counter+1)^0,f,c
  1435  000212                     
  1436                           ;source_headers/main.c: 50:         if(timer0_counter == 0){
  1437  000212  5018               	movf	_timer0_counter^0,w,c
  1438  000214  1019               	iorwf	(_timer0_counter+1)^0,w,c
  1439  000216  A4D8               	btfss	status,2,c
  1440  000218  EF10  F001         	goto	i2u15_41
  1441  00021C  EF12  F001         	goto	i2u15_40
  1442  000220                     i2u15_41:
  1443  000220  EF1A  F001         	goto	i2l167
  1444  000224                     i2u15_40:
  1445  000224                     
  1446                           ;source_headers/main.c: 51:             timer0_flag = 1;
  1447  000224  0E00               	movlw	0
  1448  000226  6E13               	movwf	(_timer0_flag+1)^0,c
  1449  000228  0E01               	movlw	1
  1450  00022A  6E12               	movwf	_timer0_flag^0,c
  1451                           
  1452                           ;source_headers/main.c: 52:             timer0_counter = 10;
  1453  00022C  0E00               	movlw	0
  1454  00022E  6E19               	movwf	(_timer0_counter+1)^0,c
  1455  000230  0E0A               	movlw	10
  1456  000232  6E18               	movwf	_timer0_counter^0,c
  1457  000234                     i2l167:
  1458                           
  1459                           ;source_headers/main.c: 54:         TMR0L = 61;
  1460  000234  0E3D               	movlw	61
  1461  000236  6ED6               	movwf	214,c	;volatile
  1462  000238                     
  1463                           ;source_headers/main.c: 55:         TMR0IF = 0;
  1464  000238  94F2               	bcf	4082,2,c	;volatile
  1465  00023A                     i2l1032:
  1466                           
  1467                           ;source_headers/main.c: 57:     if(TMR1IF == 1){
  1468  00023A  A09E               	btfss	3998,0,c	;volatile
  1469  00023C  EF22  F001         	goto	i2u16_41
  1470  000240  EF24  F001         	goto	i2u16_40
  1471  000244                     i2u16_41:
  1472  000244  EF3D  F001         	goto	i2l1042
  1473  000248                     i2u16_40:
  1474  000248                     
  1475                           ;source_headers/main.c: 59:         timer1_counter--;
  1476  000248  0616               	decf	_timer1_counter^0,f,c
  1477  00024A  A0D8               	btfss	status,0,c
  1478  00024C  0617               	decf	(_timer1_counter+1)^0,f,c
  1479  00024E                     
  1480                           ;source_headers/main.c: 60:         if(timer1_counter == 0){
  1481  00024E  5016               	movf	_timer1_counter^0,w,c
  1482  000250  1017               	iorwf	(_timer1_counter+1)^0,w,c
  1483  000252  A4D8               	btfss	status,2,c
  1484  000254  EF2E  F001         	goto	i2u17_41
  1485  000258  EF30  F001         	goto	i2u17_40
  1486  00025C                     i2u17_41:
  1487  00025C  EF38  F001         	goto	i2l169
  1488  000260                     i2u17_40:
  1489  000260                     
  1490                           ;source_headers/main.c: 61:             timer1_flag = 1;
  1491  000260  0E00               	movlw	0
  1492  000262  6E11               	movwf	(_timer1_flag+1)^0,c
  1493  000264  0E01               	movlw	1
  1494  000266  6E10               	movwf	_timer1_flag^0,c
  1495                           
  1496                           ;source_headers/main.c: 62:             timer1_counter = 125;
  1497  000268  0E00               	movlw	0
  1498  00026A  6E17               	movwf	(_timer1_counter+1)^0,c
  1499  00026C  0E7D               	movlw	125
  1500  00026E  6E16               	movwf	_timer1_counter^0,c
  1501  000270                     i2l169:
  1502                           
  1503                           ;source_headers/main.c: 64:         TMR1 = 15536;
  1504  000270  0E3C               	movlw	60
  1505  000272  6ECF               	movwf	207,c	;volatile
  1506  000274  0EB0               	movlw	176
  1507  000276  6ECE               	movwf	206,c	;volatile
  1508  000278                     
  1509                           ;source_headers/main.c: 65:         TMR1IF = 0;
  1510  000278  909E               	bcf	3998,0,c	;volatile
  1511  00027A                     i2l1042:
  1512                           
  1513                           ;source_headers/main.c: 67:     if(RBIF == 1){
  1514  00027A  A0F2               	btfss	4082,0,c	;volatile
  1515  00027C  EF42  F001         	goto	i2u18_41
  1516  000280  EF44  F001         	goto	i2u18_40
  1517  000284                     i2u18_41:
  1518  000284  EF4E  F001         	goto	i2l171
  1519  000288                     i2u18_40:
  1520  000288                     
  1521                           ;source_headers/main.c: 69:         rb_flag = 1;
  1522  000288  0E00               	movlw	0
  1523  00028A  6E0D               	movwf	(_rb_flag+1)^0,c
  1524  00028C  0E01               	movlw	1
  1525  00028E  6E0C               	movwf	_rb_flag^0,c
  1526  000290                     
  1527                           ;source_headers/main.c: 70:         PORTB;
  1528  000290  5081               	movf	129,w,c	;volatile
  1529  000292                     
  1530                           ;source_headers/main.c: 71:         RBIF = 0;
  1531  000292  90F2               	bcf	4082,0,c	;volatile
  1532  000294                     
  1533                           ;source_headers/main.c: 72:         rb_flag = 1;
  1534  000294  0E00               	movlw	0
  1535  000296  6E0D               	movwf	(_rb_flag+1)^0,c
  1536  000298  0E01               	movlw	1
  1537  00029A  6E0C               	movwf	_rb_flag^0,c
  1538  00029C                     i2l171:
  1539  00029C  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1540  00029E  0011               	retfie		f
  1541  0002A0                     __end_of_ISR:
  1542                           	callstack 0
  1543  0000                     
  1544                           	psect	rparam
  1545  0000                     
  1546                           	psect	temp
  1547  00001B                     btemp:
  1548                           	callstack 0
  1549  00001B                     	ds	1
  1550  0000                     int$flags	set	btemp
  1551  0000                     wtemp8	set	btemp+1
  1552  0000                     ttemp5	set	btemp+1
  1553  0000                     ttemp6	set	btemp+4
  1554  0000                     ttemp7	set	btemp+8
  1555                           
  1556                           	psect	idloc
  1557                           
  1558                           ;Config register IDLOC0 @ 0x200000
  1559                           ;	unspecified, using default values
  1560  200000                     	org	2097152
  1561  200000  FF                 	db	255
  1562                           
  1563                           ;Config register IDLOC1 @ 0x200001
  1564                           ;	unspecified, using default values
  1565  200001                     	org	2097153
  1566  200001  FF                 	db	255
  1567                           
  1568                           ;Config register IDLOC2 @ 0x200002
  1569                           ;	unspecified, using default values
  1570  200002                     	org	2097154
  1571  200002  FF                 	db	255
  1572                           
  1573                           ;Config register IDLOC3 @ 0x200003
  1574                           ;	unspecified, using default values
  1575  200003                     	org	2097155
  1576  200003  FF                 	db	255
  1577                           
  1578                           ;Config register IDLOC4 @ 0x200004
  1579                           ;	unspecified, using default values
  1580  200004                     	org	2097156
  1581  200004  FF                 	db	255
  1582                           
  1583                           ;Config register IDLOC5 @ 0x200005
  1584                           ;	unspecified, using default values
  1585  200005                     	org	2097157
  1586  200005  FF                 	db	255
  1587                           
  1588                           ;Config register IDLOC6 @ 0x200006
  1589                           ;	unspecified, using default values
  1590  200006                     	org	2097158
  1591  200006  FF                 	db	255
  1592                           
  1593                           ;Config register IDLOC7 @ 0x200007
  1594                           ;	unspecified, using default values
  1595  200007                     	org	2097159
  1596  200007  FF                 	db	255
  1597                           
  1598                           	psect	config
  1599                           
  1600                           ; Padding undefined space
  1601  300000                     	org	3145728
  1602  300000  FF                 	db	255
  1603                           
  1604                           ;Config register CONFIG1H @ 0x300001
  1605                           ;	Oscillator Selection bits
  1606                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  1607                           ;	Fail-Safe Clock Monitor Enable bit
  1608                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1609                           ;	Internal/External Oscillator Switchover bit
  1610                           ;	IESO = OFF, Two-Speed Start-up disabled
  1611  300001                     	org	3145729
  1612  300001  06                 	db	6
  1613                           
  1614                           ;Config register CONFIG2L @ 0x300002
  1615                           ;	Power-up Timer Enable bit
  1616                           ;	PWRT = OFF, PWRT disabled
  1617                           ;	Brown-out Reset Enable bits
  1618                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1619                           ;	Brown-out Voltage bits
  1620                           ;	BORV = 0x3, unprogrammed default
  1621  300002                     	org	3145730
  1622  300002  19                 	db	25
  1623                           
  1624                           ;Config register CONFIG2H @ 0x300003
  1625                           ;	Watchdog Timer
  1626                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1627                           ;	Watchdog Timer Postscale Select bits
  1628                           ;	WDTPS = 0xF, unprogrammed default
  1629  300003                     	org	3145731
  1630  300003  1E                 	db	30
  1631                           
  1632                           ;Config register CONFIG3L @ 0x300004
  1633                           ;	unspecified, using default values
  1634                           ;	Processor Data Memory Mode Select bits
  1635                           ;	MODE = 0x3, unprogrammed default
  1636                           ;	Address Bus Width Select bits
  1637                           ;	ADDRBW = 0x3, unprogrammed default
  1638                           ;	Data Bus Width Select bit
  1639                           ;	DATABW = 0x1, unprogrammed default
  1640                           ;	External Bus Data Wait Enable bit
  1641                           ;	WAIT = 0x1, unprogrammed default
  1642  300004                     	org	3145732
  1643  300004  F3                 	db	243
  1644                           
  1645                           ;Config register CONFIG3H @ 0x300005
  1646                           ;	CCP2 MUX bit
  1647                           ;	CCP2MX = 0x1, unprogrammed default
  1648                           ;	ECCP MUX bit
  1649                           ;	ECCPMX = 0x1, unprogrammed default
  1650                           ;	Low-Power Timer1 Oscillator Enable bit
  1651                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1652                           ;	MCLR Pin Enable bit
  1653                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  1654  300005                     	org	3145733
  1655  300005  83                 	db	131
  1656                           
  1657                           ;Config register CONFIG4L @ 0x300006
  1658                           ;	Stack Full/Underflow Reset Enable bit
  1659                           ;	STVREN = 0x1, unprogrammed default
  1660                           ;	Single-Supply ICSP Enable bit
  1661                           ;	LVP = OFF, Single-Supply ICSP disabled
  1662                           ;	Boot Block Size Select bits
  1663                           ;	BBSIZ = 0x0, unprogrammed default
  1664                           ;	Extended Instruction Set Enable bit
  1665                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1666                           ;	Background Debugger Enable bit
  1667                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1668  300006                     	org	3145734
  1669  300006  81                 	db	129
  1670                           
  1671                           ; Padding undefined space
  1672  300007                     	org	3145735
  1673  300007  FF                 	db	255
  1674                           
  1675                           ;Config register CONFIG5L @ 0x300008
  1676                           ;	unspecified, using default values
  1677                           ;	Code Protection bit Block 0
  1678                           ;	CP0 = 0x1, unprogrammed default
  1679                           ;	Code Protection bit Block 1
  1680                           ;	CP1 = 0x1, unprogrammed default
  1681                           ;	Code Protection bit Block 2
  1682                           ;	CP2 = 0x1, unprogrammed default
  1683                           ;	Code Protection bit Block 3
  1684                           ;	CP3 = 0x1, unprogrammed default
  1685                           ;	Code Protection bit Block 4
  1686                           ;	CP4 = 0x1, unprogrammed default
  1687                           ;	Code Protection bit Block 5
  1688                           ;	CP5 = 0x1, unprogrammed default
  1689                           ;	Code Protection bit Block 6
  1690                           ;	CP6 = 0x1, unprogrammed default
  1691                           ;	Code Protection bit Block 7
  1692                           ;	CP7 = 0x1, unprogrammed default
  1693  300008                     	org	3145736
  1694  300008  FF                 	db	255
  1695                           
  1696                           ;Config register CONFIG5H @ 0x300009
  1697                           ;	unspecified, using default values
  1698                           ;	Boot Block Code Protection bit
  1699                           ;	CPB = 0x1, unprogrammed default
  1700                           ;	Data EEPROM Code Protection bit
  1701                           ;	CPD = 0x1, unprogrammed default
  1702  300009                     	org	3145737
  1703  300009  C0                 	db	192
  1704                           
  1705                           ;Config register CONFIG6L @ 0x30000A
  1706                           ;	unspecified, using default values
  1707                           ;	Write Protection bit Block 0
  1708                           ;	WRT0 = 0x1, unprogrammed default
  1709                           ;	Write Protection bit Block 1
  1710                           ;	WRT1 = 0x1, unprogrammed default
  1711                           ;	Write Protection bit Block 2
  1712                           ;	WRT2 = 0x1, unprogrammed default
  1713                           ;	Write Protection bit Block 3
  1714                           ;	WRT3 = 0x1, unprogrammed default
  1715                           ;	Write Protection bit Block 4
  1716                           ;	WRT4 = 0x1, unprogrammed default
  1717                           ;	Write Protection bit Block 5
  1718                           ;	WRT5 = 0x1, unprogrammed default
  1719                           ;	Write Protection bit Block 6
  1720                           ;	WRT6 = 0x1, unprogrammed default
  1721                           ;	Write Protection bit Block 7
  1722                           ;	WRT7 = 0x1, unprogrammed default
  1723  30000A                     	org	3145738
  1724  30000A  FF                 	db	255
  1725                           
  1726                           ;Config register CONFIG6H @ 0x30000B
  1727                           ;	unspecified, using default values
  1728                           ;	Configuration Register Write Protection bit
  1729                           ;	WRTC = 0x1, unprogrammed default
  1730                           ;	Boot Block Write Protection bit
  1731                           ;	WRTB = 0x1, unprogrammed default
  1732                           ;	Data EEPROM Write Protection bit
  1733                           ;	WRTD = 0x1, unprogrammed default
  1734  30000B                     	org	3145739
  1735  30000B  E0                 	db	224
  1736                           
  1737                           ;Config register CONFIG7L @ 0x30000C
  1738                           ;	unspecified, using default values
  1739                           ;	Table Read Protection bit Block 0
  1740                           ;	EBTR0 = 0x1, unprogrammed default
  1741                           ;	Table Read Protection bit Block 1
  1742                           ;	EBTR1 = 0x1, unprogrammed default
  1743                           ;	Table Read Protection bit Block 2
  1744                           ;	EBTR2 = 0x1, unprogrammed default
  1745                           ;	Table Read Protection bit Block 3
  1746                           ;	EBTR3 = 0x1, unprogrammed default
  1747                           ;	Table Read Protection bit Block 4
  1748                           ;	EBTR4 = 0x1, unprogrammed default
  1749                           ;	Table Read Protection bit Block 5
  1750                           ;	EBTR5 = 0x1, unprogrammed default
  1751                           ;	Table Read Protection bit Block 6
  1752                           ;	EBTR6 = 0x1, unprogrammed default
  1753                           ;	Table Read Protection bit Block 7
  1754                           ;	EBTR7 = 0x1, unprogrammed default
  1755  30000C                     	org	3145740
  1756  30000C  FF                 	db	255
  1757                           
  1758                           ;Config register CONFIG7H @ 0x30000D
  1759                           ;	unspecified, using default values
  1760                           ;	Boot Block Table Read Protection bit
  1761                           ;	EBTRB = 0x1, unprogrammed default
  1762  30000D                     	org	3145741
  1763  30000D  40                 	db	64
  1764                           tosu	equ	0xFFF
  1765                           tosh	equ	0xFFE
  1766                           tosl	equ	0xFFD
  1767                           stkptr	equ	0xFFC
  1768                           pclatu	equ	0xFFB
  1769                           pclath	equ	0xFFA
  1770                           pcl	equ	0xFF9
  1771                           tblptru	equ	0xFF8
  1772                           tblptrh	equ	0xFF7
  1773                           tblptrl	equ	0xFF6
  1774                           tablat	equ	0xFF5
  1775                           prodh	equ	0xFF4
  1776                           prodl	equ	0xFF3
  1777                           indf0	equ	0xFEF
  1778                           postinc0	equ	0xFEE
  1779                           postdec0	equ	0xFED
  1780                           preinc0	equ	0xFEC
  1781                           plusw0	equ	0xFEB
  1782                           fsr0h	equ	0xFEA
  1783                           fsr0l	equ	0xFE9
  1784                           wreg	equ	0xFE8
  1785                           indf1	equ	0xFE7
  1786                           postinc1	equ	0xFE6
  1787                           postdec1	equ	0xFE5
  1788                           preinc1	equ	0xFE4
  1789                           plusw1	equ	0xFE3
  1790                           fsr1h	equ	0xFE2
  1791                           fsr1l	equ	0xFE1
  1792                           bsr	equ	0xFE0
  1793                           indf2	equ	0xFDF
  1794                           postinc2	equ	0xFDE
  1795                           postdec2	equ	0xFDD
  1796                           preinc2	equ	0xFDC
  1797                           plusw2	equ	0xFDB
  1798                           fsr2h	equ	0xFDA
  1799                           fsr2l	equ	0xFD9
  1800                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         10
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     11      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Update7Segment

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     360
                                              4 COMRAM     7     7      0
                            _EndGame
                               _Init
                            _Restart
                     _Update7Segment
                         _UpdateLeds
                       _adc_complete
                      _correct_guess
                          _game_over
                          _hs_passed
                        _rb4_handled
                     _special_number
 ---------------------------------------------------------------------------------
 (1) _special_number                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rb4_handled                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hs_passed                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _game_over                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _correct_guess                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_complete                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UpdateLeds                                           2     0      2     196
                                              0 COMRAM     2     0      2
             _latcde_update_complete
 ---------------------------------------------------------------------------------
 (2) _latcde_update_complete                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Update7Segment                                       4     2      2      98
                                              0 COMRAM     4     2      2
              _latjh_update_complete
 ---------------------------------------------------------------------------------
 (2) _latjh_update_complete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Restart                                              0     0      0       0
                            _restart
 ---------------------------------------------------------------------------------
 (2) _restart                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                      _init_complete
 ---------------------------------------------------------------------------------
 (2) _init_complete                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EndGame                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EndGame
   _Init
     _init_complete
   _Restart
     _restart
   _Update7Segment
     _latjh_update_complete
   _UpdateLeds
     _latcde_update_complete
   _adc_complete
   _correct_guess
   _game_over
   _hs_passed
   _rb4_handled
   _special_number

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      B      1A       1       27.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      32        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun May 31 15:13:44 2020

                              l7 03AE                               l10 03A6  
                             l13 039E                               l22 03A4  
                             l31 03AC                               l16 03AA  
                             l25 03A0                               l34 039C  
                             l19 03A8                               l28 03A2  
                            l202 0398                              l174 0308  
                            l194 0356                              l179 01DC  
                            l196 036A                              l189 01E2  
                            l199 03B0                              l900 02BC  
                            l910 0302                              l902 02DA  
                            l912 0304                              l904 02E8  
                            l906 02FE                              l908 0300  
                            l956 0394                              l894 039A  
                            l898 02A0                              _GIE 007F97  
                            u300 0096                              u301 0092  
                            u310 00C8                              u311 00C4  
                            u320 00FE                              u321 00FA  
                            u250 031C                              u251 0318  
                            u260 0342                              u261 033E  
                            u270 0028                              u271 0024  
                            u280 0046                              u281 0042  
                            u290 0070                              u291 006C  
                            _ISR 0008                              wreg 000FE8  
                           ?_ISR 0001            __size_of_adc_complete 0002  
                           l1100 0130                             l1110 0158  
                           l1102 0138                             l1120 01DE  
                           l1112 0160                             l1104 0140  
                           l1114 0168                             l1106 0148  
                           l1130 0330                             l1108 0150  
                           l1132 0342                             l1140 0028  
                           l1118 0170                             l1134 0366  
                           l1126 030A                             l1150 005A  
                           l1142 0030                             l1128 031C  
                           l1160 0096                             l1152 005E  
                           l1144 0034                             l1136 0012  
                           l1170 00FE                             l1162 009A  
                           l1154 0070                             l1146 0046  
                           l1138 0016                             l1172 010E  
                           l1164 00A2                             l1156 007C  
                           l1148 0052                             l1094 011A  
                           l1166 00C8                             l1158 0084  
                           l1096 0120                             l1168 00D8  
                           l1178 0186                             l1098 0128  
                           _ADIF 007CF6                             _ADON 007E10  
                           _LATJ 000F91                             _RBIE 007F93  
                           _RBIF 007F90                             _TMR0 000FD6  
                           _TMR1 000FCE                main@current_value 0008  
                           _Init 02A0                             _main 0012  
                           btemp 001B                             start 000E  
                __end_of_EndGame 03B2                     ___param_bank 000000  
                          ??_ISR 0001                  __end_of_Restart 039A  
                          ?_Init 0001                            ?_main 0001  
                  _correct_guess 03A4                            _T0CON 000FD5  
                          _T1CON 000FCD                            _LATC1 007C59  
                          _LATD0 007C60                            _LATC2 007C5A  
                          _LATD1 007C61                            _LATD2 007C62  
                          _LATD3 007C63                            _LATE1 007C69  
                          _LATE2 007C6A             __size_of_rb4_handled 0002  
                          _LATH0 007C80                            i2l171 029C  
                          i2l167 0234                            i2l169 0270  
                   _adc_complete 03A6                            _TMR0L 000FD6  
                          _PORTB 000F81                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                            _TRISH 000F99  
                          _TRISJ 000F9A                 ??_special_number 0001  
        ?_latcde_update_complete 0001                            tablat 000FF5  
                __end_of_restart 03AE                            ttemp5 001C  
                          ttemp6 001F                            ttemp7 0023  
                          status 000FD8                            wtemp8 001C  
                __initialization 036C                     __end_of_Init 030A  
                   __end_of_main 011A                           ??_Init 0001  
                 ?_correct_guess 0001                           ??_main 0005  
                  __activetblptr 000003   __end_of_latcde_update_complete 03AA  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ADCON2 000FC0                           i2l1020 01FC  
                         i2l1030 0238                           i2l1022 01FE  
                         i2l1040 0278                           i2l1024 020C  
                         i2l1032 023A                           i2l1016 01E6  
                         i2l1050 0294                           i2l1034 0248  
                         i2l1042 027A                           i2l1026 0212  
                         i2l1018 01F4                           i2l1044 0288  
                         i2l1036 024E                           i2l1028 0224  
                         i2l1046 0290                           i2l1038 0260  
                         i2l1048 0292                           _INTCON 000FF2  
                      ??_EndGame 0001                           _TMR0IE 007F95  
                         _TMR0IF 007F92                           _TMR1IE 007CE8  
                         _TMR1IF 007CF0                        ??_Restart 0001  
         __size_of_init_complete 0002                           clear_0 0384  
                   __pdataCOMRAM 001A                       _UpdateLeds 030A  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8            _latjh_update_complete 03AA  
                      ??_restart 0001                       __accesstop 0060  
        __end_of__initialization 038A                    ___rparam_used 000001  
                 __pcstackCOMRAM 0001                  ??_correct_guess 0001  
             __size_of_game_over 0002                       _adcon_flag 000E  
                  _init_complete 03AE                       __pnvCOMRAM 0016  
             __size_of_hs_passed 0002                      ?_UpdateLeds 0001  
         ?_latjh_update_complete 0001                   ?_init_complete 0001  
                        i2u13_40 01F4                          i2u13_41 01F0  
                        i2u14_40 020C                          i2u14_41 0208  
                        i2u15_40 0224                          i2u15_41 0220  
                        i2u16_40 0248                          i2u16_41 0244  
                        i2u17_40 0260                          i2u17_41 025C  
                        i2u18_40 0288                          i2u18_41 0284  
        __size_of_Update7Segment 00CA                          _EndGame 03B0  
              __end_of_game_over 03A4                          __Hparam 0000  
                        __Lparam 0000                          _Restart 0394  
                  ??_rb4_handled 0001                          __pcinit 036C  
                        __ramtop 1000                          __ptext0 0012  
                        __ptext1 039A                          __ptext2 039E  
                        __ptext3 03A0                          __ptext4 03A2  
                        __ptext5 03A4                          __ptext6 03A6  
                        __ptext7 030A                          __ptext8 03A8  
                        __ptext9 011A                __end_of_hs_passed 03A2  
                   __size_of_ISR 0298                          _rb_flag 000C  
                        _restart 03AC                          _special 001A  
                 __pintcode_body 01E4   Update7Segment@value_to_display 0001  
           end_of_initialization 038A                          int_func 01E4  
            __size_of_UpdateLeds 0062                UpdateLeds@down_up 0001  
                        postinc0 000FEE                  ??_init_complete 0001  
            __end_of_rb4_handled 03A0          __size_of_special_number 0004  
                 _timer0_counter 0018                   _timer1_counter 0016  
                  __pidataCOMRAM 03B2              start_initialization 036C  
                    __end_of_ISR 02A0                   _Update7Segment 011A  
                    _rb4_handled 039E            __end_of_correct_guess 03A6  
        ??_latjh_update_complete 0001         ??_latcde_update_complete 0001  
                  ?_adc_complete 0001                     ??_UpdateLeds 0003  
                    __pbssCOMRAM 000C           __end_of_Update7Segment 01E4  
                      _adc_value 0014                         ?_EndGame 0001  
                       ?_Restart 0001                        _game_over 03A2  
             __end_of_UpdateLeds 036C                        __pintcode 0008  
                 ??_adc_complete 0001                  ?_Update7Segment 0001  
                       ?_restart 0001                        _hs_passed 03A0  
                 _special_number 039A                       ?_game_over 0001  
__size_of_latcde_update_complete 0002                        main@guess 000A  
                     ?_hs_passed 0001           __end_of_special_number 039E  
               __size_of_EndGame 0002                         __Hrparam 0000  
                       __Lrparam 0000                 __size_of_Restart 0006  
          __end_of_init_complete 03B0                         __ptext10 03AA  
                       __ptext11 0394                         __ptext12 03AC  
                       __ptext13 02A0                         __ptext14 03AE  
                       __ptext15 03B0                 __size_of_restart 0002  
                  __size_of_Init 006A           _latcde_update_complete 03A8  
                ?_special_number 0001                    __size_of_main 0108  
           __end_of_adc_complete 03A8                      ??_game_over 0001  
                       int$flags 001B                     ?_rb4_handled 0001  
 __size_of_latjh_update_complete 0002    __end_of_latjh_update_complete 03AC  
                    ??_hs_passed 0001                         intlevel2 0000  
                    _timer0_flag 0012                      _timer1_flag 0010  
               ??_Update7Segment 0003           __size_of_correct_guess 0002  
